{"version":3,"sources":["utils/storageUtils.js","redux/action-types.js","redux/reducer.js","redux/store.js","api/ajax.js","api/index.js","redux/actions.js","pages/login/login.jsx","config/menuConfig.js","components/left-nav/index.jsx","components/link-button/index.jsx","utils/dateUtils.js","components/header/index.jsx","pages/home/home.jsx","pages/category/add-form.jsx","pages/category/update-form.jsx","pages/category/category.jsx","utils/constants.js","utils/memoryUtils.js","pages/product/home.jsx","pages/product/pictures-wall.jsx","pages/product/rich-text-editor.jsx","pages/product/add-update.jsx","pages/product/detail.jsx","pages/product/product.jsx","pages/role/add-form.jsx","pages/role/auth-form.jsx","pages/role/role.jsx","pages/user/user-form.jsx","pages/user/user.jsx","pages/charts/bar.jsx","pages/charts/line.jsx","pages/charts/pie.jsx","pages/not-found/not-found.jsx","pages/admin/admin.jsx","App.js","index.js","assets/images/logo.png"],"names":["storageUtils","user","store","set","remove","SET_HEAD_TITLE","RECEIVE_USER","SHOW_ERROR_MSG","RESET_USER","initHeadTitle","initUser","get","combineReducers","headTitle","state","arguments","length","undefined","action","type","data","errorMsg","Object","objectSpread","createStore","reducer","composeWithDevTools","applyMiddleware","thunk","ajax","url","Promise","resolve","reject","axios","params","post","then","response","catch","error","message","reqLogin","username","password","reqCategorys","parentId","reqAddCategory","categoryName","reqUpdateCategory","_ref","categoryId","reqCategory","reqProducts","pageNum","pageSize","reqUpdateStatus","productId","status","reqSearchProducts","_ref2","searchName","searchType","defineProperty","reqDeleteImg","name","reqAddOrUpdateProduct","product","_id","reqRoles","reqAddRole","roleName","reqUpdateRole","role","reqUsers","reqDeleteUser","userId","reqAddOrUpdateUser","reqWeather","city","concat","jsonp","err","console","log","_data$results$0$weath","results","weather_data","dayPictureUrl","weather","setHeadTitle","receiveUser","logout","Item","es_form","Login","handleSubmit","event","preventDefault","_this","props","form","validateFields","asyncToGenerator","regenerator_default","a","mark","_callee","values","wrap","_context","prev","next","login","stop","_x","_x2","apply","this","validatePwd","rule","value","callback","test","react_default","createElement","react_router","to","getFieldDecorator","className","src","logo","alt","onSubmit","rules","required","whitespace","min","max","pattern","initialValue","input","prefix","icon","style","color","placeholder","validator","es_button","htmlType","Component","WrapLogin","create","connect","dispatch","result","msg","sent","menuList","title","key","isPublic","children","SubMenu","menu","LeftNav","hasAuth","item","menus","indexOf","find","child","getMenuNodes_map","map","getMenuNodes","react_router_dom","path","location","pathname","reduce","pre","cItem","openKey","push","onClick","menuNodes","mode","theme","selectedKeys","defaultOpenKeys","withRouter","LinkButton","assign","formateDate","time","date","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","Header","currentTime","now","getTime","intervalId","setInterval","setState","getWeather","getTitle","forEach","modal","confirm","content","onOk","assertThisInitialized","clearInterval","_this$state","Home","Option","es_select","AddForm","setForm","_this$props","categorys","add_form_Item","c","add_form","UpdateForm","update_form_Item","update_form","Category","loading","subCategorys","parentName","showStatus","initColumns","columns","dataIndex","width","render","category","showUpdate","showSubCategorys","getCategorys","showCategorys","handleCancel","resetFields","showAdd","addCategory","_callee2","_context2","_x3","updateCategory","_ref3","_callee3","_context3","_x4","_x5","_this2","marginRight","extra","card","table","bordered","rowKey","dataSource","pagination","defaultPageSize","showQuickJumper","visible","onCancel","PAGE_SIZE","BASE_IMG_URL","memoryUtils","ProductHome","total","products","price","newStatus","updateStatus","showDetail","procut","history","getProducts","_result$data","list","success","_this$state2","onChange","home_Option","margin","target","current","PicturesWall","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","previewVisible","previewImage","fileList","getImgs","file","handlePreview","thumbUrl","handleChange","imgs","img","index","uid","uploadButton","upload","accept","listType","onPreview","footer","React","RichTextEditor","editorState","EditorState","createEmpty","onEditorStateChange","getDetail","draftToHtml","convertToRaw","getCurrentContent","uploadImageCallBack","xhr","XMLHttpRequest","open","FormData","append","send","addEventListener","JSON","parse","responseText","link","html","detail","contentBlock","htmlToDraft","contentState","ContentState","createFromBlockArray","contentBlocks","createWithContent","react_draft_wysiwyg","editorStyle","border","minHeight","paddingLeft","toolbar","image","uploadCallback","present","mandatory","TextArea","ProductAddUpdate","options","initOptions","_assertThisInitialize","isUpdate","pCategoryId","childOptions","label","isLeaf","option","abrupt","validatePrice","loadData","selectedOptions","targetOption","toConsumableArray","submit","_ref4","_callee4","desc","categoryIds","_context4","pw","editor","goBack","createRef","fontSize","labelCol","span","wrapperCol","add_update_Item","autosize","minRows","maxRows","addonAfter","cascader","pictures_wall_PicturesWall","ref","rich_text_editor_RichTextEditor","PureComponent","add_update","es_list","ProductDetail","cName1","cName2","all","_memoryUtils$product2","detail_Item","dangerouslySetInnerHTML","__html","Product","component","exact","role_add_form_Item","role_add_form","TreeNode","AuthForm","getMenus","checkedKeys","getTreeNodes","onCheck","treeNodes","nextProps","auth_form_Item","disabled","tree","checkable","defaultExpandAll","Role","roles","isShowAdd","isShowAuth","initColumn","create_time","getRoles","onRow","addRole","updateRole","auth","auth_time","auth_name","role_id","rowSelection","selectedRowKeys","onSelect","auth_form_AuthForm","UserForm","user_form_Item","phone","email","user_form_Option","user_form","User","users","isShow","roleNames","deleteUser","initRoleNames","_onOk","getUsers","addOrUpdateUser","getFieldsValue","Bar","sales","stores","update","sale","getOption","text","tooltip","legend","xAxis","yAxis","series","lib_default","Line","Pie","subtext","x","trigger","formatter","orient","left","radius","center","itemStyle","emphasis","shadowBlur","shadowOffsetX","shadowColor","getOption2","backgroundColor","top","textStyle","visualMap","show","inRange","colorLightness","sort","b","roseType","normal","labelLine","lineStyle","smooth","length2","animationType","animationEasing","animationDelay","idx","Math","random","height","NotFound","goHome","replace","row","col","Footer","Sider","Content","Admin","layout","components_left_nav","components_header","from","textAlign","App","ReactDOM","es","App_App","document","getElementById","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.355f5b75.chunk.js","sourcesContent":["/*\r\n进行local数据存储管理的工具模块\r\n */\r\nimport store from 'store'\r\nconst USER_KEY = 'user_key'\r\nexport default {\r\n  /*\r\n  保存user\r\n   */\r\n  saveUser (user) {\r\n    // localStorage.setItem(USER_KEY, JSON.stringify(user))\r\n    store.set(USER_KEY, user)\r\n  },\r\n\r\n  /*\r\n  读取user\r\n   */\r\n  getUser () {\r\n    // return JSON.parse(localStorage.getItem(USER_KEY) || '{}')\r\n    return store.get(USER_KEY) || {}\r\n  },\r\n\r\n  /*\r\n  删除user\r\n   */\r\n  removeUser () {\r\n    // localStorage.removeItem(USER_KEY)\r\n    store.remove(USER_KEY)\r\n  }\r\n}","/*\r\n包含n个action的type常量标识名称的模块\r\n */\r\nexport const SET_HEAD_TITLE = 'set_head_title' // 设置头部标题\r\nexport const RECEIVE_USER = 'receive_user'  // 接收用户信息\r\nexport const SHOW_ERROR_MSG = 'show_error_msg' // 显示错误信息\r\nexport const RESET_USER = 'reset_user' // 重置用户信息","/*\r\n用来根据老的state和指定的action生成并返回新的state的函数\r\n */\r\nimport {combineReducers} from 'redux'\r\n\r\n/*\r\n用来管理头部标题的reducer函数\r\n */\r\nimport storageUtils from \"../utils/storageUtils\"\r\nimport {\r\n  SET_HEAD_TITLE,\r\n  RECEIVE_USER,\r\n  SHOW_ERROR_MSG,\r\n  RESET_USER\r\n} from './action-types'\r\n\r\nconst initHeadTitle = ''\r\n\r\nfunction headTitle(state = initHeadTitle, action) {\r\n  switch (action.type) {\r\n    case SET_HEAD_TITLE:\r\n      return action.data\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n/*\r\n用来管理当前登陆用户的reducer函数\r\n */\r\nconst initUser = storageUtils.getUser()\r\n\r\nfunction user(state = initUser, action) {\r\n  switch (action.type) {\r\n    case RECEIVE_USER:\r\n      return action.user\r\n    case SHOW_ERROR_MSG:\r\n      const errorMsg = action.errorMsg\r\n      // state.errorMsg = errorMsg  // 不要直接修改原本状态数据\r\n      return {...state, errorMsg}\r\n    case RESET_USER:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n/*\r\n向外默认暴露的是合并产生的总的reducer函数\r\n管理的总的state的结构:\r\n  {\r\n    headTitle: '首页',\r\n    user: {}\r\n  }\r\n */\r\nexport default combineReducers({\r\n  headTitle,\r\n  user\r\n})","/*\r\nredux最核心的管理对象store\r\n */\r\nimport {createStore, applyMiddleware} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\n\r\nimport reducer from './reducer'\r\n\r\n// 向外默认暴露store\r\nexport default createStore(reducer, composeWithDevTools(applyMiddleware(thunk)))","/*\r\n能发送异步ajax请求的函数模块\r\n封装axios库\r\n函数的返回值是promise对象\r\n1. 优化1: 统一处理请求异常?\r\n    在外层包一个自己创建的promise对象\r\n    在请求出错时, 不reject(error), 而是显示错误提示\r\n2. 优化2: 异步得到不是reponse, 而是response.data\r\n   在请求成功resolve时: resolve(response.data)\r\n */\r\n\r\nimport axios from 'axios'\r\nimport {message} from 'antd'\r\n\r\nexport default function ajax(url, data={}, type='GET') {\r\n\r\n  return new Promise((resolve, reject) => {\r\n    let promise\r\n    // 1. 执行异步ajax请求\r\n    if(type==='GET') { // 发GET请求\r\n      promise = axios.get(url, { // 配置对象\r\n        params: data // 指定请求参数\r\n      })\r\n    } else { // 发POST请求\r\n      promise = axios.post(url, data)\r\n    }\r\n    // 2. 如果成功了, 调用resolve(value)\r\n    promise.then(response => {\r\n      resolve(response.data)\r\n    // 3. 如果失败了, 不调用reject(reason), 而是提示异常信息\r\n    }).catch(error => {\r\n      // reject(error)\r\n      message.error('请求出错了: ' + error.message)\r\n    })\r\n  })\r\n\r\n\r\n}\r\n\r\n// 请求登陆接口\r\n// ajax('/login', {username: 'Tom', passsword: '12345'}, 'POST').then()\r\n// 添加用户\r\n// ajax('/manage/user/add', {username: 'Tom', passsword: '12345', phone: '13712341234'}, 'POST').then()\r\n","/*\r\n要求: 能根据接口文档定义接口请求\r\n包含应用中所有接口请求函数的模块\r\n每个函数的返回值都是promise\r\n\r\n基本要求: 能根据接口文档定义接口请求函数\r\n */\r\nimport jsonp from 'jsonp'\r\nimport {message} from 'antd'\r\nimport ajax from './ajax'\r\n\r\n// const BASE = 'http://localhost:5000'\r\nconst BASE = ''\r\n// 登陆\r\n/*\r\nexport function reqLogin(username, password) {\r\n  return ajax('/login', {username, password}, 'POST')\r\n}*/\r\nexport const reqLogin = (username, password) => ajax(BASE + '/login', {username, password}, 'POST')\r\n\r\n// 获取一级/二级分类的列表\r\nexport const reqCategorys = (parentId) => ajax(BASE + '/manage/category/list', {parentId})\r\n\r\n// 添加分类\r\nexport const reqAddCategory = (categoryName, parentId) => ajax(BASE + '/manage/category/add', {categoryName, parentId}, 'POST')\r\n\r\n// 更新分类\r\nexport const reqUpdateCategory = ({categoryId, categoryName}) => ajax(BASE + '/manage/category/update', {categoryId, categoryName}, 'POST')\r\n\r\n// 获取一个分类\r\nexport const reqCategory = (categoryId) => ajax(BASE + '/manage/category/info', {categoryId})\r\n\r\n// 获取商品分页列表\r\nexport const reqProducts = (pageNum, pageSize) => ajax(BASE + '/manage/product/list', {pageNum, pageSize})\r\n\r\n// 更新商品的状态(上架/下架)\r\nexport const reqUpdateStatus = (productId, status) => ajax(BASE + '/manage/product/updateStatus', {productId, status}, 'POST')\r\n\r\n\r\n\r\n/*\r\n搜索商品分页列表 (根据商品名称/商品描述)\r\nsearchType: 搜索的类型, productName/productDesc\r\n */\r\nexport const reqSearchProducts = ({pageNum, pageSize, searchName, searchType}) => ajax(BASE + '/manage/product/search', {\r\n  pageNum,\r\n  pageSize,\r\n  [searchType]: searchName,\r\n})\r\n\r\n// 搜索商品分页列表 (根据商品描述)\r\n/*export const reqSearchProducts2 = ({pageNum, pageSize, searchName}) => ajax(BASE + '/manage/product/search', {\r\n  pageNum,\r\n  pageSize,\r\n  productDesc: searchName,\r\n})*/\r\n\r\n// 删除指定名称的图片\r\nexport const reqDeleteImg = (name) => ajax(BASE + '/manage/img/delete', {name}, 'POST')\r\n\r\n// 添加/修改商品\r\nexport const reqAddOrUpdateProduct = (product) => ajax(BASE + '/manage/product/' + ( product._id?'update':'add'), product, 'POST')\r\n// 修改商品\r\n// export const reqUpdateProduct = (product) => ajax(BASE + '/manage/product/update', product, 'POST')\r\n\r\n\r\n// 获取所有角色的列表\r\nexport const reqRoles = () => ajax(BASE + '/manage/role/list')\r\n// 添加角色\r\nexport const reqAddRole = (roleName) => ajax(BASE + '/manage/role/add', {roleName}, 'POST')\r\n// 添加角色\r\nexport const reqUpdateRole = (role) => ajax(BASE + '/manage/role/update', role, 'POST')\r\n\r\n\r\n// 获取所有用户的列表\r\nexport const reqUsers = () => ajax(BASE + '/manage/user/list')\r\n// 删除指定用户\r\nexport const reqDeleteUser = (userId) => ajax(BASE + '/manage/user/delete', {userId}, 'POST')\r\n// 添加/更新用户\r\nexport const reqAddOrUpdateUser = (user) => ajax(BASE + '/manage/user/'+(user._id ? 'update' : 'add'), user, 'POST')\r\n\r\n/*\r\njson请求的接口请求函数\r\n */\r\nexport const reqWeather = (city) => {\r\n\r\n  return new Promise((resolve, reject) => {\r\n    const url = `http://api.map.baidu.com/telematics/v3/weather?location=${city}&output=json&ak=3p49MVra6urFRGOT9s8UBWr2`\r\n    // 发送jsonp请求\r\n    jsonp(url, {}, (err, data) => {\r\n      console.log('jsonp()', err, data)\r\n      // 如果成功了\r\n      if (!err && data.status==='success') {\r\n        // 取出需要的数据\r\n        const {dayPictureUrl, weather} = data.results[0].weather_data[0]\r\n        resolve({dayPictureUrl, weather})\r\n      } else {\r\n        // 如果失败了\r\n        message.error('获取天气信息失败!')\r\n      }\r\n\r\n    })\r\n  })\r\n}\r\n// reqWeather('北京')\r\n/*\r\njsonp解决ajax跨域的原理\r\n  1). jsonp只能解决GET类型的ajax请求跨域问题\r\n  2). jsonp请求不是ajax请求, 而是一般的get请求\r\n  3). 基本原理\r\n   浏览器端:\r\n      动态生成<script>来请求后台接口(src就是接口的url)\r\n      定义好用于接收响应数据的函数(fn), 并将函数名通过请求参数提交给后台(如: callback=fn)\r\n   服务器端:\r\n      接收到请求处理产生结果数据后, 返回一个函数调用的js代码, 并将结果数据作为实参传入函数调用\r\n   浏览器端:\r\n      收到响应自动执行函数调用的js代码, 也就执行了提前定义好的回调函数, 并得到了需要的结果数据\r\n */","/*\r\n包含n个action creator函数的模块\r\n同步action: 对象 {type: 'xxx', data: 数据值}\r\n异步action: 函数  dispatch => {}\r\n */\r\nimport {\r\n  SET_HEAD_TITLE,\r\n  RECEIVE_USER,\r\n  SHOW_ERROR_MSG,\r\n  RESET_USER\r\n} from './action-types'\r\nimport {reqLogin} from '../api'\r\nimport storageUtils from \"../utils/storageUtils\";\r\n\r\n/*\r\n设置头部标题的同步action\r\n */\r\nexport const setHeadTitle = (headTitle) => ({type: SET_HEAD_TITLE, data: headTitle})\r\n\r\n/*\r\n接收用户的同步action\r\n */\r\nexport const receiveUser = (user) => ({type: RECEIVE_USER, user})\r\n\r\n/*\r\n显示错误信息同步action\r\n */\r\nexport const showErrorMsg = (errorMsg) => ({type: SHOW_ERROR_MSG, errorMsg})\r\n\r\n/*\r\n退出登陆的同步action\r\n */\r\nexport const logout = () =>  {\r\n  // 删除local中的user\r\n  storageUtils.removeUser()\r\n  // 返回action对象\r\n  return {type: RESET_USER}\r\n}\r\n\r\n/*\r\n登陆的异步action\r\n */\r\nexport const login = (username, password) => {\r\n  return async dispatch => {\r\n    // 1. 执行异步ajax请求\r\n    const result = await reqLogin(username, password)  // {status: 0, data: user} {status: 1, msg: 'xxx'}\r\n    // 2.1. 如果成功, 分发成功的同步action\r\n    if(result.status===0) {\r\n      const user = result.data\r\n      // 保存local中\r\n      storageUtils.saveUser(user)\r\n      // 分发接收用户的同步action\r\n      dispatch(receiveUser(user))\r\n    } else { // 2.2. 如果失败, 分发失败的同步action\r\n      const msg = result.msg\r\n      // message.error(msg)\r\n      dispatch(showErrorMsg(msg))\r\n    }\r\n\r\n  }\r\n}\r\n","import React, {Component} from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {\r\n  Form,\r\n  Icon,\r\n  Input,\r\n  Button,\r\n} from 'antd'\r\nimport {connect} from 'react-redux'\r\n\r\nimport './login.less'\r\nimport logo from '../../assets/images/logo.png'\r\nimport {login} from '../../redux/actions'\r\n\r\nconst Item = Form.Item // 不能写在import之前\r\n\r\n/*\r\n登陆的路由组件\r\n */\r\nclass Login extends Component {\r\n\r\n  handleSubmit = (event) => {\r\n\r\n    // 阻止事件的默认行为\r\n    event.preventDefault()\r\n\r\n    // 对所有表单字段进行检验\r\n    this.props.form.validateFields(async (err, values) => {\r\n      // 检验成功\r\n      if (!err) {\r\n        // console.log('提交登陆的ajax请求', values)\r\n        // 请求登陆\r\n        const {username, password} = values\r\n\r\n        // 调用分发异步action的函数 => 发登陆的异步请求, 有了结果后更新状态\r\n        this.props.login(username, password)\r\n\r\n      } else {\r\n        console.log('检验失败!')\r\n      }\r\n    });\r\n\r\n    // 得到form对象\r\n    // const form = this.props.form\r\n    // // 获取表单项的输入数据\r\n    // const values = form.getFieldsValue()\r\n    // console.log('handleSubmit()', values)\r\n  }\r\n\r\n  /*\r\n  对密码进行自定义验证\r\n  */\r\n  /*\r\n   用户名/密码的的合法性要求\r\n     1). 必须输入\r\n     2). 必须大于等于4位\r\n     3). 必须小于等于12位\r\n     4). 必须是英文、数字或下划线组成\r\n    */\r\n  validatePwd = (rule, value, callback) => {\r\n    console.log('validatePwd()', rule, value)\r\n    if(!value) {\r\n      callback('密码必须输入')\r\n    } else if (value.length<4) {\r\n      callback('密码长度不能小于4位')\r\n    } else if (value.length>12) {\r\n      callback('密码长度不能大于12位')\r\n    } else if (!/^[a-zA-Z0-9_]+$/.test(value)) {\r\n      callback('密码必须是英文、数字或下划线组成')\r\n    } else {\r\n      callback() // 验证通过\r\n    }\r\n    // callback('xxxx') // 验证失败, 并指定提示的文本\r\n  }\r\n\r\n  render () {\r\n\r\n    // 如果用户已经登陆, 自动跳转到管理界面\r\n    const user = this.props.user\r\n    if(user && user._id) {\r\n      return <Redirect to='/home'/>\r\n    }\r\n\r\n    // 得到具强大功能的form对象\r\n    const form = this.props.form\r\n    const { getFieldDecorator } = form;\r\n\r\n    return (\r\n      <div className=\"login\">\r\n        <header className=\"login-header\">\r\n          <img src={logo} alt=\"logo\"/>\r\n          <h1>React项目: 后台管理系统</h1>\r\n        </header>\r\n        <section className=\"login-content\">\r\n          <div className={user.errorMsg ? 'error-msg show' : 'error-msg'}>{user.errorMsg}</div>\r\n          <h2>用户登陆</h2>\r\n          <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n            <Item>\r\n              {\r\n                /*\r\n              用户名/密码的的合法性要求\r\n                1). 必须输入\r\n                2). 必须大于等于4位\r\n                3). 必须小于等于12位\r\n                4). 必须是英文、数字或下划线组成\r\n               */\r\n              }\r\n              {\r\n                getFieldDecorator('username', { // 配置对象: 属性名是特定的一些名称\r\n                  // 声明式验证: 直接使用别人定义好的验证规则进行验证\r\n                  rules: [\r\n                    { required: true, whitespace: true, message: '用户名必须输入' },\r\n                    { min: 4, message: '用户名至少4位' },\r\n                    { max: 12, message: '用户名最多12位' },\r\n                    { pattern: /^[a-zA-Z0-9_]+$/, message: '用户名必须是英文、数字或下划线组成' },\r\n                  ],\r\n                  initialValue: 'admin', // 初始值\r\n                })(\r\n                  <Input\r\n                    prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                    placeholder=\"用户名\"\r\n                  />\r\n                )\r\n              }\r\n            </Item>\r\n            <Form.Item>\r\n              {\r\n                getFieldDecorator('password', {\r\n                  rules: [\r\n                    {\r\n                      validator: this.validatePwd\r\n                    }\r\n                  ]\r\n                })(\r\n                  <Input\r\n                    prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                    type=\"password\"\r\n                    placeholder=\"密码\"\r\n                  />\r\n                )\r\n              }\r\n\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                登陆\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </section>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n/*\r\n1. 高阶函数\r\n    1). 一类特别的函数\r\n        a. 接受函数类型的参数\r\n        b. 返回值是函数\r\n    2). 常见\r\n        a. 定时器: setTimeout()/setInterval()\r\n        b. Promise: Promise(() => {}) then(value => {}, reason => {})\r\n        c. 数组遍历相关的方法: forEach()/filter()/map()/reduce()/find()/findIndex()\r\n        d. 函数对象的bind()\r\n        e. Form.create()() / getFieldDecorator()()\r\n    3). 高阶函数更新动态, 更加具有扩展性\r\n\r\n2. 高阶组件\r\n    1). 本质就是一个函数\r\n    2). 接收一个组件(被包装组件), 返回一个新的组件(包装组件), 包装组件会向被包装组件传入特定属性\r\n    3). 作用: 扩展组件的功能\r\n    4). 高阶组件也是高阶函数: 接收一个组件函数, 返回是一个新的组件函数\r\n */\r\n/*\r\n包装Form组件生成一个新的组件: Form(Login)\r\n新组件会向Form组件传递一个强大的对象属性: form\r\n */\r\nconst WrapLogin = Form.create()(Login)\r\nexport default connect(\r\n  state => ({user: state.user}),\r\n  {login}\r\n)(WrapLogin)\r\n\r\n\r\n/*\r\n1. 前台表单验证\r\n2. 收集表单输入数据\r\n */\r\n\r\n/*\r\nasync和await\r\n1. 作用?\r\n   简化promise对象的使用: 不用再使用then()来指定成功/失败的回调函数\r\n   以同步编码(没有回调函数了)方式实现异步流程\r\n2. 哪里写await?\r\n    在返回promise的表达式左侧写await: 不想要promise, 想要promise异步执行的成功的value数据\r\n3. 哪里写async?\r\n    await所在函数(最近的)定义的左侧写async\r\n */","const menuList = [\r\n  {\r\n    title: '首页', // 菜单标题名称\r\n    key: '/home', // 对应的path\r\n    icon: 'home', // 图标名称\r\n    isPublic: true, // 公开的\r\n  },\r\n  {\r\n    title: '商品',\r\n    key: '/products',\r\n    icon: 'appstore',\r\n    children: [ // 子菜单列表\r\n      {\r\n        title: '品类管理',\r\n        key: '/category',\r\n        icon: 'bars'\r\n      },\r\n      {\r\n        title: '商品管理',\r\n        key: '/product',\r\n        icon: 'tool'\r\n      },\r\n    ]\r\n  },\r\n\r\n  {\r\n    title: '用户管理',\r\n    key: '/user',\r\n    icon: 'user'\r\n  },\r\n  {\r\n    title: '角色管理',\r\n    key: '/role',\r\n    icon: 'safety',\r\n  },\r\n\r\n  {\r\n    title: '图形图表',\r\n    key: '/charts',\r\n    icon: 'area-chart',\r\n    children: [\r\n      {\r\n        title: '柱形图',\r\n        key: '/charts/bar',\r\n        icon: 'bar-chart'\r\n      },\r\n      {\r\n        title: '折线图',\r\n        key: '/charts/line',\r\n        icon: 'line-chart'\r\n      },\r\n      {\r\n        title: '饼图',\r\n        key: '/charts/pie',\r\n        icon: 'pie-chart'\r\n      },\r\n    ]\r\n  },\r\n]\r\n\r\nexport default menuList","import React, {Component} from 'react'\r\nimport {Link, withRouter} from 'react-router-dom'\r\nimport {Menu, Icon} from 'antd'\r\nimport {connect} from 'react-redux'\r\n\r\nimport logo from '../../assets/images/logo.png'\r\nimport menuList from '../../config/menuConfig'\r\nimport './index.less'\r\nimport {setHeadTitle} from '../../redux/actions'\r\n\r\nconst SubMenu = Menu.SubMenu;\r\n\r\n/*\r\n左侧导航的组件\r\n */\r\nclass LeftNav extends Component {\r\n\r\n  /*\r\n  判断当前登陆用户对item是否有权限\r\n   */\r\n  hasAuth = (item) => {\r\n    const {key, isPublic} = item\r\n\r\n    const menus = this.props.user.role.menus\r\n    const username = this.props.user.username\r\n    /*\r\n    1. 如果当前用户是admin\r\n    2. 如果当前item是公开的\r\n    3. 当前用户有此item的权限: key有没有menus中\r\n     */\r\n    if(username==='admin' || isPublic || menus.indexOf(key)!==-1) {\r\n      return true\r\n    } else if(item.children){ // 4. 如果当前用户有此item的某个子item的权限\r\n      return !!item.children.find(child =>  menus.indexOf(child.key)!==-1)\r\n    }\r\n\r\n    return false\r\n  }\r\n\r\n  /*\r\n  根据menu的数据数组生成对应的标签数组\r\n  使用map() + 递归调用\r\n  */\r\n  getMenuNodes_map = (menuList) => {\r\n    return menuList.map(item => {\r\n      /*\r\n        {\r\n          title: '首页', // 菜单标题名称\r\n          key: '/home', // 对应的path\r\n          icon: 'home', // 图标名称\r\n          children: [], // 可能有, 也可能没有\r\n        }\r\n\r\n        <Menu.Item key=\"/home\">\r\n          <Link to='/home'>\r\n            <Icon type=\"pie-chart\"/>\r\n            <span>首页</span>\r\n          </Link>\r\n        </Menu.Item>\r\n\r\n        <SubMenu\r\n          key=\"sub1\"\r\n          title={\r\n            <span>\r\n              <Icon type=\"mail\"/>\r\n              <span>商品</span>\r\n            </span>\r\n          }\r\n        >\r\n          <Menu.Item/>\r\n          <Menu.Item/>\r\n        </SubMenu>\r\n      */\r\n      if(!item.children) {\r\n        return (\r\n          <Menu.Item key={item.key}>\r\n            <Link to={item.key}>\r\n              <Icon type={item.icon}/>\r\n              <span>{item.title}</span>\r\n            </Link>\r\n          </Menu.Item>\r\n        )\r\n      } else {\r\n        return (\r\n          <SubMenu\r\n            key={item.key}\r\n            title={\r\n              <span>\r\n              <Icon type={item.icon}/>\r\n              <span>{item.title}</span>\r\n            </span>\r\n            }\r\n          >\r\n            {this.getMenuNodes(item.children)}\r\n          </SubMenu>\r\n        )\r\n      }\r\n\r\n    })\r\n  }\r\n\r\n  /*\r\n  根据menu的数据数组生成对应的标签数组\r\n  使用reduce() + 递归调用\r\n  */\r\n  getMenuNodes = (menuList) => {\r\n    // 得到当前请求的路由路径\r\n    const path = this.props.location.pathname\r\n\r\n    return menuList.reduce((pre, item) => {\r\n\r\n      // 如果当前用户有item对应的权限, 才需要显示对应的菜单项\r\n      if (this.hasAuth(item)) {\r\n\r\n\r\n        // 向pre添加<Menu.Item>\r\n        if(!item.children) {\r\n          // 判断item是否是当前对应的item\r\n          if (item.key===path || path.indexOf(item.key)===0) {\r\n            // 更新redux中的headerTitle状态\r\n            this.props.setHeadTitle(item.title)\r\n          }\r\n\r\n          pre.push((\r\n            <Menu.Item key={item.key}>\r\n              <Link to={item.key} onClick={() => this.props.setHeadTitle(item.title)}>\r\n                <Icon type={item.icon}/>\r\n                <span>{item.title}</span>\r\n              </Link>\r\n            </Menu.Item>\r\n          ))\r\n        } else {\r\n          // 查找一个与当前请求路径匹配的子Item\r\n          const cItem = item.children.find(cItem => path.indexOf(cItem.key)===0)\r\n          // 如果存在, 说明当前item的子列表需要打开\r\n          if (cItem) {\r\n            this.openKey = item.key\r\n          }\r\n\r\n\r\n          // 向pre添加<SubMenu>\r\n          pre.push((\r\n            <SubMenu\r\n              key={item.key}\r\n              title={\r\n                <span>\r\n              <Icon type={item.icon}/>\r\n              <span>{item.title}</span>\r\n            </span>\r\n              }\r\n            >\r\n              {this.getMenuNodes(item.children)}\r\n            </SubMenu>\r\n          ))\r\n        }\r\n      }\r\n\r\n      return pre\r\n    }, [])\r\n  }\r\n\r\n  /*\r\n  在第一次render()之前执行一次\r\n  为第一个render()准备数据(必须同步的)\r\n   */\r\n  componentWillMount () {\r\n    this.menuNodes = this.getMenuNodes(menuList)\r\n  }\r\n\r\n  render() {\r\n    // debugger\r\n    // 得到当前请求的路由路径\r\n    let path = this.props.location.pathname\r\n    console.log('render()', path)\r\n    if(path.indexOf('/product')===0) { // 当前请求的是商品或其子路由界面\r\n      path = '/product'\r\n    }\r\n\r\n    // 得到需要打开菜单项的key\r\n    const openKey = this.openKey\r\n\r\n    return (\r\n      <div className=\"left-nav\">\r\n        <Link to='/' className=\"left-nav-header\">\r\n          <img src={logo} alt=\"logo\"/>\r\n          <h1>硅谷后台</h1>\r\n        </Link>\r\n\r\n        <Menu\r\n          mode=\"inline\"\r\n          theme=\"dark\"\r\n          selectedKeys={[path]}\r\n          defaultOpenKeys={[openKey]}\r\n        >\r\n\r\n          {\r\n            this.menuNodes\r\n          }\r\n\r\n        </Menu>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n/*\r\nwithRouter高阶组件:\r\n包装非路由组件, 返回一个新的组件\r\n新的组件向非路由组件传递3个属性: history/location/match\r\n */\r\nexport default connect(\r\n  state => ({user: state.user}),\r\n  {setHeadTitle}\r\n)(withRouter(LeftNav))","import React from 'react'\r\nimport './index.less'\r\n/*\r\n外形像链接的按钮\r\n */\r\nexport default function LinkButton(props) {\r\n  return <button {...props} className=\"link-button\"></button>\r\n}","/*\r\n包含n个日期时间处理的工具函数模块\r\n*/\r\n\r\n/*\r\n  格式化日期\r\n*/\r\nexport function formateDate(time) {\r\n  if (!time) return ''\r\n  let date = new Date(time)\r\n  return date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate()\r\n    + ' ' + date.getHours() + ':' + date.getMinutes() + ':' + date.getSeconds()\r\n}","import React, {Component} from 'react'\r\nimport {withRouter} from 'react-router-dom'\r\nimport { Modal} from 'antd'\r\nimport {connect} from 'react-redux'\r\n\r\nimport LinkButton from '../link-button'\r\nimport {reqWeather} from '../../api'\r\nimport menuList from '../../config/menuConfig'\r\nimport {formateDate} from '../../utils/dateUtils'\r\nimport './index.less'\r\nimport {logout} from '../../redux/actions'\r\n\r\n/*\r\n左侧导航的组件\r\n */\r\nclass Header extends Component {\r\n\r\n  state = {\r\n    currentTime: formateDate(Date.now()), // 当前时间字符串\r\n    dayPictureUrl: '', // 天气图片url\r\n    weather: '', // 天气的文本\r\n  }\r\n\r\n  getTime = () => {\r\n    // 每隔1s获取当前时间, 并更新状态数据currentTime\r\n    this.intervalId = setInterval(() => {\r\n      const currentTime = formateDate(Date.now())\r\n      this.setState({currentTime})\r\n    }, 1000)\r\n  }\r\n\r\n  getWeather = async () => {\r\n    // 调用接口请求异步获取数据\r\n    const {dayPictureUrl, weather} = await reqWeather('北京')\r\n    // 更新状态\r\n    this.setState({dayPictureUrl, weather})\r\n  }\r\n\r\n  getTitle = () => {\r\n    // 得到当前请求路径\r\n    const path = this.props.location.pathname\r\n    let title\r\n    menuList.forEach(item => {\r\n      if (item.key===path) { // 如果当前item对象的key与path一样,item的title就是需要显示的title\r\n        title = item.title\r\n      } else if (item.children) {\r\n        // 在所有子item中查找匹配的\r\n        const cItem = item.children.find(cItem => path.indexOf(cItem.key)===0)\r\n        // 如果有值才说明有匹配的\r\n        if(cItem) {\r\n          // 取出它的title\r\n          title = cItem.title\r\n        }\r\n      }\r\n    })\r\n    return title\r\n  }\r\n\r\n  /*\r\n  退出登陆\r\n   */\r\n  logout = () => {\r\n    // 显示确认框\r\n    Modal.confirm({\r\n      content: '确定退出吗?',\r\n      onOk: () => {\r\n        console.log('OK', this)\r\n        this.props.logout()\r\n      }\r\n    })\r\n  }\r\n\r\n  /*\r\n  第一次render()之后执行一次\r\n  一般在此执行异步操作: 发ajax请求/启动定时器\r\n   */\r\n  componentDidMount () {\r\n    // 获取当前的时间\r\n    this.getTime()\r\n    // 获取当前天气\r\n    this.getWeather()\r\n  }\r\n  /*\r\n  // 不能这么做: 不会更新显示\r\n  componentWillMount () {\r\n    this.title = this.getTitle()\r\n  }*/\r\n\r\n  /*\r\n  当前组件卸载之前调用\r\n   */\r\n  componentWillUnmount () {\r\n    // 清除定时器\r\n    clearInterval(this.intervalId)\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    const {currentTime, dayPictureUrl, weather} = this.state\r\n\r\n    const username = this.props.user.username\r\n\r\n    // 得到当前需要显示的title\r\n    // const title = this.getTitle()\r\n    const title = this.props.headTitle\r\n    return (\r\n      <div className=\"header\">\r\n        <div className=\"header-top\">\r\n          <span>欢迎, {username}</span>\r\n          <LinkButton onClick={this.logout}>退出</LinkButton>\r\n        </div>\r\n        <div className=\"header-bottom\">\r\n          <div className=\"header-bottom-left\">{title}</div>\r\n          <div className=\"header-bottom-right\">\r\n            <span>{currentTime}</span>\r\n            <img src={dayPictureUrl} alt=\"weather\"/>\r\n            <span>{weather}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({headTitle: state.headTitle, user: state.user}),\r\n  {logout}\r\n)(withRouter(Header))","import React, {Component} from 'react'\r\nimport './home.less'\r\n/*\r\n首页路由\r\n */\r\nexport default class Home extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"home\">\r\n        欢迎使用硅谷后台管理系统\r\n      </div>\r\n    )\r\n  }\r\n}","import React, {Component} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n  Form,\r\n  Select,\r\n  Input\r\n} from 'antd'\r\n\r\nconst Item = Form.Item\r\nconst Option = Select.Option\r\n\r\n/*\r\n添加分类的form组件\r\n */\r\nclass AddForm extends Component {\r\n\r\n  static propTypes = {\r\n    setForm: PropTypes.func.isRequired, // 用来传递form对象的函数\r\n    categorys: PropTypes.array.isRequired, // 一级分类的数组\r\n    parentId: PropTypes.string.isRequired, // 父分类的ID\r\n  }\r\n\r\n  componentWillMount () {\r\n    this.props.setForm(this.props.form)\r\n  }\r\n\r\n  render() {\r\n    const {categorys, parentId} = this.props\r\n    const { getFieldDecorator } = this.props.form\r\n\r\n    return (\r\n      <Form>\r\n        <Item>\r\n          {\r\n            getFieldDecorator('parentId', {\r\n              initialValue: parentId\r\n            })(\r\n              <Select>\r\n                <Option value='0'>一级分类</Option>\r\n                {\r\n                  categorys.map(c => <Option value={c._id}>{c.name}</Option>)\r\n                }\r\n              </Select>\r\n            )\r\n          }\r\n\r\n        </Item>\r\n\r\n        <Item>\r\n          {\r\n            getFieldDecorator('categoryName', {\r\n              initialValue: '',\r\n              rules: [\r\n                {required: true, message: '分类名称必须输入'}\r\n              ]\r\n            })(\r\n              <Input placeholder='请输入分类名称'/>\r\n            )\r\n          }\r\n        </Item>\r\n      </Form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Form.create()(AddForm)","import React, {Component} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n  Form,\r\n  Input\r\n} from 'antd'\r\n\r\nconst Item = Form.Item\r\n\r\n/*\r\n更新分类的form组件\r\n */\r\nclass UpdateForm extends Component {\r\n\r\n  static propTypes = {\r\n    categoryName: PropTypes.string.isRequired,\r\n    setForm: PropTypes.func.isRequired\r\n  }\r\n\r\n  componentWillMount () {\r\n    // 将form对象通过setForm()传递父组件\r\n    this.props.setForm(this.props.form)\r\n  }\r\n\r\n  render() {\r\n\r\n    const {categoryName} = this.props\r\n    const { getFieldDecorator } = this.props.form\r\n\r\n    return (\r\n      <Form>\r\n        <Item>\r\n          {\r\n            getFieldDecorator('categoryName', {\r\n              initialValue: categoryName,\r\n              rules: [\r\n                {required: true, message: '分类名称必须输入'}\r\n              ]\r\n            })(\r\n              <Input placeholder='请输入分类名称'/>\r\n            )\r\n          }\r\n        </Item>\r\n      </Form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Form.create()(UpdateForm)","import React, {Component} from 'react'\r\nimport {\r\n  Card,\r\n  Table,\r\n  Button,\r\n  Icon,\r\n  message,\r\n  Modal\r\n} from 'antd'\r\n\r\nimport LinkButton from '../../components/link-button'\r\nimport {reqCategorys, reqUpdateCategory, reqAddCategory} from '../../api'\r\nimport AddForm from './add-form'\r\nimport UpdateForm from './update-form'\r\n\r\n/*\r\n商品分类路由\r\n */\r\nexport default class Category extends Component {\r\n\r\n  state = {\r\n    loading: false, // 是否正在获取数据中\r\n    categorys: [], // 一级分类列表\r\n    subCategorys: [], // 二级分类列表\r\n    parentId: '0', // 当前需要显示的分类列表的父分类ID\r\n    parentName: '', // 当前需要显示的分类列表的父分类名称\r\n    showStatus: 0, // 标识添加/更新的确认框是否显示, 0: 都不显示, 1: 显示添加, 2: 显示更新\r\n  }\r\n\r\n  /*\r\n  初始化Table所有列的数组\r\n   */\r\n  initColumns = () => {\r\n    this.columns = [\r\n      {\r\n        title: '分类的名称',\r\n        dataIndex: 'name', // 显示数据对应的属性名\r\n      },\r\n      {\r\n        title: '操作',\r\n        width: 300,\r\n        render: (category) => ( // 返回需要显示的界面标签\r\n          <span>\r\n            <LinkButton onClick={() => this.showUpdate(category)}>修改分类</LinkButton>\r\n            {/*如何向事件回调函数传递参数: 先定义一个匿名函数, 在函数调用处理的函数并传入数据*/}\r\n            {this.state.parentId==='0' ? <LinkButton onClick={() => this.showSubCategorys(category)}>查看子分类</LinkButton> : null}\r\n\r\n          </span>\r\n        )\r\n      }\r\n    ]\r\n  }\r\n\r\n\r\n  /*\r\n  异步获取一级/二级分类列表显示\r\n  parentId: 如果没有指定根据状态中的parentId请求, 如果指定了根据指定的请求\r\n   */\r\n  getCategorys = async (parentId) => {\r\n\r\n    // 在发请求前, 显示loading\r\n    this.setState({loading: true})\r\n    parentId = parentId || this.state.parentId\r\n    // 发异步ajax请求, 获取数据\r\n    const result = await reqCategorys(parentId)\r\n    // 在请求完成后, 隐藏loading\r\n    this.setState({loading: false})\r\n\r\n    if(result.status===0) {\r\n      // 取出分类数组(可能是一级也可能二级的)\r\n      const categorys = result.data\r\n      if(parentId==='0') {\r\n        // 更新一级分类状态\r\n        this.setState({\r\n          categorys\r\n        })\r\n        console.log('----', this.state.categorys.length)\r\n      } else {\r\n        // 更新二级分类状态\r\n        this.setState({\r\n          subCategorys: categorys\r\n        })\r\n      }\r\n    } else {\r\n      message.error('获取分类列表失败')\r\n    }\r\n  }\r\n\r\n  /*\r\n  显示指定一级分类对象的二子列表\r\n   */\r\n  showSubCategorys = (category) => {\r\n    // 更新状态\r\n    this.setState({\r\n      parentId: category._id,\r\n      parentName: category.name\r\n    }, () => { // 在状态更新且重新render()后执行\r\n      console.log('parentId', this.state.parentId) // '0'\r\n      // 获取二级分类列表显示\r\n      this.getCategorys()\r\n    })\r\n\r\n    // setState()不能立即获取最新的状态: 因为setState()是异步更新状态的\r\n    // console.log('parentId', this.state.parentId) // '0'\r\n  }\r\n\r\n  /*\r\n  显示指定一级分类列表\r\n   */\r\n  showCategorys = () => {\r\n    // 更新为显示一列表的状态\r\n    this.setState({\r\n      parentId: '0',\r\n      parentName: '',\r\n      subCategorys: []\r\n    })\r\n  }\r\n\r\n  /*\r\n  响应点击取消: 隐藏确定框\r\n   */\r\n  handleCancel = () => {\r\n    // 清除输入数据\r\n    this.form.resetFields()\r\n    // 隐藏确认框\r\n    this.setState({\r\n      showStatus: 0\r\n    })\r\n  }\r\n\r\n  /*\r\n  显示添加的确认框\r\n   */\r\n  showAdd = () => {\r\n    this.setState({\r\n      showStatus: 1\r\n    })\r\n  }\r\n\r\n  /*\r\n  添加分类\r\n   */\r\n  addCategory = () => {\r\n    this.form.validateFields(async (err, values) => {\r\n      if (!err) {\r\n        // 隐藏确认框\r\n        this.setState({\r\n          showStatus: 0\r\n        })\r\n\r\n        // 收集数据, 并提交添加分类的请求\r\n        const {parentId, categoryName} = values\r\n        // 清除输入数据\r\n        this.form.resetFields()\r\n        const result = await reqAddCategory(categoryName, parentId)\r\n        if(result.status===0) {\r\n\r\n          // 添加的分类就是当前分类列表下的分类\r\n          if(parentId===this.state.parentId) {\r\n            // 重新获取当前分类列表显示\r\n            this.getCategorys()\r\n          } else if (parentId==='0'){ // 在二级分类列表下添加一级分类, 重新获取一级分类列表, 但不需要显示一级列表\r\n            this.getCategorys('0')\r\n          }\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n  /*\r\n  显示修改的确认框\r\n   */\r\n  showUpdate = (category) => {\r\n    // 保存分类对象\r\n    this.category = category\r\n    // 更新状态\r\n    this.setState({\r\n      showStatus: 2\r\n    })\r\n  }\r\n\r\n  /*\r\n  更新分类\r\n   */\r\n  updateCategory = () => {\r\n    console.log('updateCategory()')\r\n    // 进行表单验证, 只有通过了才处理\r\n    this.form.validateFields(async (err, values) => {\r\n      if(!err) {\r\n        // 1. 隐藏确定框\r\n        this.setState({\r\n          showStatus: 0\r\n        })\r\n\r\n        // 准备数据\r\n        const categoryId = this.category._id\r\n        const {categoryName} = values\r\n        // 清除输入数据\r\n        this.form.resetFields()\r\n\r\n        // 2. 发请求更新分类\r\n        const result = await reqUpdateCategory({categoryId, categoryName})\r\n        if (result.status===0) {\r\n          // 3. 重新显示列表\r\n          this.getCategorys()\r\n        }\r\n      }\r\n    })\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n  /*\r\n  为第一次render()准备数据\r\n   */\r\n  componentWillMount () {\r\n    this.initColumns()\r\n  }\r\n\r\n  /*\r\n  执行异步任务: 发异步ajax请求\r\n   */\r\n  componentDidMount () {\r\n    // 获取一级分类列表显示\r\n    this.getCategorys()\r\n  }\r\n\r\n  render() {\r\n\r\n    // 读取状态数据\r\n    const {categorys, subCategorys, parentId, parentName, loading, showStatus} = this.state\r\n    // 读取指定的分类\r\n    const category = this.category || {} // 如果还没有指定一个空对象\r\n\r\n    // card的左侧\r\n    const title = parentId === '0' ? '一级分类列表' : (\r\n      <span>\r\n        <LinkButton onClick={this.showCategorys}>一级分类列表</LinkButton>\r\n        <Icon type='arrow-right' style={{marginRight: 5}}/>\r\n        <span>{parentName}</span>\r\n      </span>\r\n    )\r\n    // Card的右侧\r\n    const extra = (\r\n      <Button type='primary' onClick={this.showAdd}>\r\n        <Icon type='plus'/>\r\n        添加\r\n      </Button>\r\n    )\r\n\r\n    return (\r\n      <Card title={title} extra={extra}>\r\n        <Table\r\n          bordered\r\n          rowKey='_id'\r\n          loading={loading}\r\n          dataSource={parentId==='0' ? categorys : subCategorys}\r\n          columns={this.columns}\r\n          pagination={{defaultPageSize: 5, showQuickJumper: true}}\r\n        />\r\n\r\n        <Modal\r\n          title=\"添加分类\"\r\n          visible={showStatus===1}\r\n          onOk={this.addCategory}\r\n          onCancel={this.handleCancel}\r\n        >\r\n          <AddForm\r\n            categorys={categorys}\r\n            parentId={parentId}\r\n            setForm={(form) => {this.form = form}}\r\n          />\r\n        </Modal>\r\n\r\n        <Modal\r\n          title=\"更新分类\"\r\n          visible={showStatus===2}\r\n          onOk={this.updateCategory}\r\n          onCancel={this.handleCancel}\r\n        >\r\n          <UpdateForm\r\n            categoryName={category.name}\r\n            setForm={(form) => {this.form = form}}\r\n          />\r\n        </Modal>\r\n      </Card>\r\n    )\r\n  }\r\n}","/*\r\n包含一些常量值的模块\r\n */\r\nexport const PAGE_SIZE = 3 // 每页显示的记录数\r\nexport const BASE_IMG_URL = 'http://localhost:5000/upload/' // 上传图片的基础路径","/*\r\n用来在内存保存一些数据的工具模块\r\n */\r\nexport default {\r\n  user: {}, // 保存当前登陆的user\r\n  product: {}, // 指定的商品对象\r\n}","import React, {Component} from 'react'\r\nimport {\r\n  Card,\r\n  Select,\r\n  Input,\r\n  Button,\r\n  Icon,\r\n  Table,\r\n  message\r\n} from 'antd'\r\n\r\nimport LinkButton from '../../components/link-button'\r\nimport {reqProducts, reqSearchProducts, reqUpdateStatus} from '../../api'\r\nimport {PAGE_SIZE} from '../../utils/constants'\r\nimport memoryUtils from \"../../utils/memoryUtils\";\r\n\r\nconst Option = Select.Option\r\n\r\n/*\r\nProduct的默认子路由组件\r\n */\r\nexport default class ProductHome extends Component {\r\n\r\n  state = {\r\n    total: 0, // 商品的总数量\r\n    products: [], // 商品的数组\r\n    loading: false, // 是否正在加载中\r\n    searchName: '', // 搜索的关键字\r\n    searchType: 'productName', // 根据哪个字段搜索\r\n  }\r\n\r\n  /*\r\n  初始化table的列的数组\r\n   */\r\n  initColumns = () => {\r\n    this.columns = [\r\n      {\r\n        title: '商品名称',\r\n        dataIndex: 'name',\r\n      },\r\n      {\r\n        title: '商品描述',\r\n        dataIndex: 'desc',\r\n      },\r\n      {\r\n        title: '价格',\r\n        dataIndex: 'price',\r\n        render: (price) => '¥' + price  // 当前指定了对应的属性, 传入的是对应的属性值\r\n      },\r\n      {\r\n        width: 100,\r\n        title: '状态',\r\n        // dataIndex: 'status',\r\n        render: (product) => {\r\n          const {status, _id} = product\r\n          const newStatus = status===1 ? 2 : 1\r\n          return (\r\n            <span>\r\n              <Button\r\n                type='primary'\r\n                onClick={() => this.updateStatus(_id, newStatus)}\r\n              >\r\n                {status===1 ? '下架' : '上架'}\r\n              </Button>\r\n              <span>{status===1 ? '在售' : '已下架'}</span>\r\n            </span>\r\n          )\r\n        }\r\n      },\r\n      {\r\n        width: 100,\r\n        title: '操作',\r\n        render: (product) => {\r\n          return (\r\n            <span>\r\n              {/*将product对象使用state传递给目标路由组件*/}\r\n              <LinkButton onClick={() => this.showDetail(product)}>详情</LinkButton>\r\n              <LinkButton onClick={() => this.showUpdate(product)}>修改</LinkButton>\r\n            </span>\r\n          )\r\n        }\r\n      },\r\n    ];\r\n  }\r\n\r\n  /*\r\n  显示商品详情界面\r\n   */\r\n  showDetail = (procut) => {\r\n    // 缓存product对象 ==> 给detail组件使用\r\n    memoryUtils.product = procut\r\n    this.props.history.push('/product/detail')\r\n  }\r\n\r\n  /*\r\n  显示修改商品界面\r\n   */\r\n  showUpdate = (procut) => {\r\n    // 缓存product对象 ==> 给detail组件使用\r\n    memoryUtils.product = procut\r\n    this.props.history.push('/product/addupdate')\r\n  }\r\n\r\n  /*\r\n  获取指定页码的列表数据显示\r\n   */\r\n  getProducts = async (pageNum) => {\r\n    this.pageNum = pageNum // 保存pageNum, 让其它方法可以看到\r\n    this.setState({loading: true}) // 显示loading\r\n\r\n    const {searchName, searchType} = this.state\r\n    // 如果搜索关键字有值, 说明我们要做搜索分页\r\n    let result\r\n    if (searchName) {\r\n      result = await reqSearchProducts({pageNum, pageSize: PAGE_SIZE, searchName, searchType})\r\n    } else { // 一般分页请求\r\n      result = await reqProducts(pageNum, PAGE_SIZE)\r\n    }\r\n\r\n    this.setState({loading: false}) // 隐藏loading\r\n    if (result.status === 0) {\r\n      // 取出分页数据, 更新状态, 显示分页列表\r\n      const {total, list} = result.data\r\n      this.setState({\r\n        total,\r\n        products: list\r\n      })\r\n    }\r\n  }\r\n\r\n  /*\r\n  更新指定商品的状态\r\n   */\r\n  updateStatus = async (productId, status) => {\r\n    const result = await reqUpdateStatus(productId, status)\r\n    if(result.status===0) {\r\n      message.success('更新商品成功')\r\n      this.getProducts(this.pageNum)\r\n    }\r\n  }\r\n\r\n  componentWillMount () {\r\n    this.initColumns()\r\n  }\r\n\r\n  componentDidMount () {\r\n    this.getProducts(1)\r\n  }\r\n\r\n  render() {\r\n\r\n    // 取出状态数据\r\n    const {products, total, loading, searchType, searchName} = this.state\r\n\r\n\r\n\r\n    const title = (\r\n      <span>\r\n        <Select\r\n          value= {searchType}\r\n          style={{width: 150}}\r\n          onChange={value => this.setState({searchType:value})}\r\n        >\r\n          <Option value='productName'>按名称搜索</Option>\r\n          <Option value='productDesc'>按描述搜索</Option>\r\n        </Select>\r\n        <Input\r\n          placeholder='关键字'\r\n          style={{width: 150, margin: '0 15px'}}\r\n          value={searchName}\r\n          onChange={event => this.setState({searchName:event.target.value})}\r\n        />\r\n        <Button type='primary' onClick={() => this.getProducts(1)}>搜索</Button>\r\n      </span>\r\n    )\r\n\r\n    const extra = (\r\n      <Button type='primary' onClick={() => this.props.history.push('/product/addupdate')}>\r\n        <Icon type='plus'/>\r\n        添加商品\r\n      </Button>\r\n    )\r\n\r\n    return (\r\n      <Card title={title} extra={extra}>\r\n        <Table\r\n          bordered\r\n          rowKey='_id'\r\n          loading={loading}\r\n          dataSource={products}\r\n          columns={this.columns}\r\n          pagination={{\r\n            current: this.pageNum,\r\n            total,\r\n            defaultPageSize: PAGE_SIZE,\r\n            showQuickJumper: true,\r\n            onChange: this.getProducts\r\n          }}\r\n        />\r\n      </Card>\r\n    )\r\n  }\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Upload, Icon, Modal, message } from 'antd'\r\nimport {reqDeleteImg} from '../../api'\r\nimport {BASE_IMG_URL} from \"../../utils/constants\";\r\n/*\r\n用于图片上传的组件\r\n */\r\nexport default class PicturesWall extends React.Component {\r\n\r\n  static propTypes = {\r\n    imgs: PropTypes.array\r\n  }\r\n\r\n  state = {\r\n    previewVisible: false, // 标识是否显示大图预览Modal\r\n    previewImage: '', // 大图的url\r\n    fileList: [\r\n      /*{\r\n        uid: '-1', // 每个file都有自己唯一的id\r\n        name: 'xxx.png', // 图片文件名\r\n        status: 'done', // 图片状态: done-已上传, uploading: 正在上传中, removed: 已删除\r\n        url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png', // 图片地址\r\n      },*/\r\n    ],\r\n  }\r\n\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    let fileList = []\r\n\r\n    // 如果传入了imgs属性\r\n    const {imgs} = this.props\r\n    if (imgs && imgs.length>0) {\r\n      fileList = imgs.map((img, index) => ({\r\n        uid: -index, // 每个file都有自己唯一的id\r\n        name: img, // 图片文件名\r\n        status: 'done', // 图片状态: done-已上传, uploading: 正在上传中, removed: 已删除\r\n        url: BASE_IMG_URL + img\r\n      }))\r\n    }\r\n\r\n    // 初始化状态\r\n    this.state = {\r\n      previewVisible: false, // 标识是否显示大图预览Modal\r\n      previewImage: '', // 大图的url\r\n      fileList // 所有已上传图片的数组\r\n    }\r\n  }\r\n\r\n  /*\r\n  获取所有已上传图片文件名的数组\r\n   */\r\n  getImgs  = () => {\r\n    return this.state.fileList.map(file => file.name)\r\n  }\r\n\r\n  /*\r\n  隐藏Modal\r\n   */\r\n  handleCancel = () => this.setState({ previewVisible: false });\r\n\r\n  handlePreview = file => {\r\n    console.log('handlePreview()', file)\r\n    // 显示指定file对应的大图\r\n    this.setState({\r\n      previewImage: file.url || file.thumbUrl,\r\n      previewVisible: true,\r\n    });\r\n  };\r\n\r\n  /*\r\n  file: 当前操作的图片文件(上传/删除)\r\n  fileList: 所有已上传图片文件对象的数组\r\n   */\r\n  handleChange = async ({ file, fileList }) => {\r\n    console.log('handleChange()', file.status, fileList.length, file===fileList[fileList.length-1])\r\n\r\n    // 一旦上传成功, 将当前上传的file的信息修正(name, url)\r\n    if(file.status==='done') {\r\n      const result = file.response  // {status: 0, data: {name: 'xxx.jpg', url: '图片地址'}}\r\n      if(result.status===0) {\r\n        message.success('上传图片成功!')\r\n        const {name, url} = result.data\r\n        file = fileList[fileList.length-1]\r\n        file.name = name\r\n        file.url = url\r\n      } else {\r\n        message.error('上传图片失败')\r\n      }\r\n    } else if (file.status==='removed') { // 删除图片\r\n      const result = await reqDeleteImg(file.name)\r\n      if (result.status===0) {\r\n        message.success('删除图片成功!')\r\n      } else {\r\n        message.error('删除图片失败!')\r\n      }\r\n    }\r\n\r\n    // 在操作(上传/删除)过程中更新fileList状态\r\n    this.setState({ fileList })\r\n  };\r\n\r\n  render() {\r\n    const { previewVisible, previewImage, fileList } = this.state;\r\n    const uploadButton = (\r\n      <div>\r\n        <Icon type=\"plus\" />\r\n        <div>Upload</div>\r\n      </div>\r\n    );\r\n    return (\r\n      <div>\r\n        <Upload\r\n          action=\"/manage/img/upload\" /*上传图片的接口地址*/\r\n          accept='image/*'  /*只接收图片格式*/\r\n          name='image' /*请求参数名*/\r\n          listType=\"picture-card\"  /*卡片样式*/\r\n          fileList={fileList}  /*所有已上传图片文件对象的数组*/\r\n          onPreview={this.handlePreview}\r\n          onChange={this.handleChange}\r\n        >\r\n          {fileList.length >= 4 ? null : uploadButton}\r\n        </Upload>\r\n\r\n        <Modal visible={previewVisible} footer={null} onCancel={this.handleCancel}>\r\n          <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}","/*\r\n用来指定商品详情的富文本编辑器组件\r\n */\r\nimport React, {Component} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {EditorState, convertToRaw, ContentState} from 'draft-js'\r\nimport {Editor} from 'react-draft-wysiwyg'\r\nimport draftToHtml from 'draftjs-to-html'\r\nimport htmlToDraft from 'html-to-draftjs'\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css'\r\n\r\n\r\nexport default class RichTextEditor extends Component {\r\n  \r\n  static propTypes = {\r\n    detail: PropTypes.string\r\n  }\r\n  \r\n  state = {\r\n    editorState: EditorState.createEmpty(), // 创建一个没有内容的编辑对象\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    const html = this.props.detail\r\n    if (html) { // 如果有值, 根据html格式字符串创建一个对应的编辑对象\r\n      const contentBlock = htmlToDraft(html)\r\n      const contentState = ContentState.createFromBlockArray(contentBlock.contentBlocks)\r\n      const editorState = EditorState.createWithContent(contentState)\r\n      this.state = {\r\n        editorState,\r\n      }\r\n    } else {\r\n      this.state = {\r\n        editorState: EditorState.createEmpty(), // 创建一个没有内容的编辑对象\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  /*\r\n  输入过程中实时的回调\r\n   */\r\n  onEditorStateChange = (editorState) => {\r\n    console.log('onEditorStateChange()')\r\n    this.setState({\r\n      editorState,\r\n    })\r\n  }\r\n\r\n  getDetail = () => {\r\n    // 返回输入数据对应的html格式的文本\r\n    return draftToHtml(convertToRaw(this.state.editorState.getCurrentContent()))\r\n  }\r\n\r\n  uploadImageCallBack = (file) => {\r\n    return new Promise(\r\n      (resolve, reject) => {\r\n        const xhr = new XMLHttpRequest()\r\n        xhr.open('POST', '/manage/img/upload')\r\n        const data = new FormData()\r\n        data.append('image', file)\r\n        xhr.send(data)\r\n        xhr.addEventListener('load', () => {\r\n          const response = JSON.parse(xhr.responseText)\r\n          const url = response.data.url // 得到图片的url\r\n          resolve({data: {link: url}})\r\n        })\r\n        xhr.addEventListener('error', () => {\r\n          const error = JSON.parse(xhr.responseText)\r\n          reject(error)\r\n        })\r\n      }\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const {editorState} = this.state\r\n    return (\r\n      <Editor\r\n        editorState={editorState}\r\n        editorStyle={{border: '1px solid black', minHeight: 200, paddingLeft: 10}}\r\n        onEditorStateChange={this.onEditorStateChange}\r\n        toolbar={{\r\n          image: { uploadCallback: this.uploadImageCallBack, alt: { present: true, mandatory: true } },\r\n        }}\r\n      />\r\n    )\r\n  }\r\n}","import React, {PureComponent} from 'react'\r\nimport {\r\n  Card,\r\n  Icon,\r\n  Form,\r\n  Input,\r\n  Cascader,\r\n  Button,\r\n  message\r\n} from 'antd'\r\n\r\nimport PicturesWall from './pictures-wall'\r\nimport RichTextEditor from './rich-text-editor'\r\nimport LinkButton from '../../components/link-button'\r\nimport {reqCategorys, reqAddOrUpdateProduct} from '../../api'\r\nimport memoryUtils from \"../../utils/memoryUtils\";\r\n\r\nconst {Item} = Form\r\nconst { TextArea } = Input\r\n\r\n/*\r\nProduct的添加和更新的子路由组件\r\n */\r\nclass ProductAddUpdate extends PureComponent {\r\n\r\n  state = {\r\n    options: [],\r\n  }\r\n\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    // 创建用来保存ref标识的标签对象的容器\r\n    this.pw = React.createRef()\r\n    this.editor = React.createRef()\r\n  }\r\n\r\n  initOptions = async (categorys) => {\r\n    // 根据categorys生成options数组\r\n    const options = categorys.map(c => ({\r\n      value: c._id,\r\n      label: c.name,\r\n      isLeaf: false, // 不是叶子\r\n    }))\r\n\r\n    // 如果是一个二级分类商品的更新\r\n    const {isUpdate, product} = this\r\n    const {pCategoryId} = product\r\n    if(isUpdate && pCategoryId!=='0') {\r\n      // 获取对应的二级分类列表\r\n      const subCategorys = await this.getCategorys(pCategoryId)\r\n      // 生成二级下拉列表的options\r\n      const childOptions = subCategorys.map(c => ({\r\n        value: c._id,\r\n        label: c.name,\r\n        isLeaf: true\r\n      }))\r\n\r\n      // 找到当前商品对应的一级option对象\r\n      const targetOption = options.find(option => option.value===pCategoryId)\r\n\r\n      // 关联对应的一级option上\r\n      targetOption.children = childOptions\r\n    }\r\n\r\n\r\n    // 更新options状态\r\n    this.setState({\r\n      options\r\n    })\r\n  }\r\n\r\n  /*\r\n  异步获取一级/二级分类列表, 并显示\r\n  async函数的返回值是一个新的promise对象, promise的结果和值由async的结果来决定\r\n   */\r\n  getCategorys = async (parentId) => {\r\n    const result = await reqCategorys(parentId)   // {status: 0, data: categorys}\r\n    if (result.status===0) {\r\n      const categorys = result.data\r\n      // 如果是一级分类列表\r\n      if (parentId==='0') {\r\n        this.initOptions(categorys)\r\n      } else { // 二级列表\r\n        return categorys  // 返回二级列表 ==> 当前async函数返回的promsie就会成功且value为categorys\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  /*\r\n  验证价格的自定义验证函数\r\n   */\r\n  validatePrice = (rule, value, callback) => {\r\n    console.log(value, typeof value)\r\n    if (value*1 > 0) {\r\n      callback() // 验证通过\r\n    } else {\r\n      callback('价格必须大于0') // 验证没通过\r\n    }\r\n  }\r\n\r\n  /*\r\n  用加载下一级列表的回调函数\r\n   */\r\n  loadData = async selectedOptions => {\r\n    // 得到选择的option对象\r\n    const targetOption = selectedOptions[0]\r\n    // 显示loading\r\n    targetOption.loading = true\r\n\r\n    // 根据选中的分类, 请求获取二级分类列表\r\n    const subCategorys = await this.getCategorys(targetOption.value)\r\n    // 隐藏loading\r\n    targetOption.loading = false\r\n    // 二级分类数组有数据\r\n    if (subCategorys && subCategorys.length>0) {\r\n      // 生成一个二级列表的options\r\n      const childOptions = subCategorys.map(c => ({\r\n        value: c._id,\r\n        label: c.name,\r\n        isLeaf: true\r\n      }))\r\n      // 关联到当前option上\r\n      targetOption.children = childOptions\r\n    } else { // 当前选中的分类没有二级分类\r\n      targetOption.isLeaf = true\r\n    }\r\n\r\n    // 更新options状态\r\n    this.setState({\r\n      options: [...this.state.options],\r\n    })\r\n  }\r\n\r\n  submit = () => {\r\n    // 进行表单验证, 如果通过了, 才发送请求\r\n    this.props.form.validateFields(async (error, values) => {\r\n      if (!error) {\r\n\r\n        // 1. 收集数据, 并封装成product对象\r\n        const {name, desc, price, categoryIds} = values\r\n        let pCategoryId, categoryId\r\n        if (categoryIds.length===1) {\r\n          pCategoryId = '0'\r\n          categoryId = categoryIds[0]\r\n        } else {\r\n          pCategoryId = categoryIds[0]\r\n          categoryId = categoryIds[1]\r\n        }\r\n        const imgs = this.pw.current.getImgs()\r\n        const detail = this.editor.current.getDetail()\r\n\r\n        const product = {name, desc, price, imgs, detail, pCategoryId, categoryId}\r\n\r\n        // 如果是更新, 需要添加_id\r\n        if(this.isUpdate) {\r\n          product._id = this.product._id\r\n        }\r\n\r\n        // 2. 调用接口请求函数去添加/更新\r\n        const result = await reqAddOrUpdateProduct(product)\r\n\r\n        // 3. 根据结果提示\r\n        if (result.status===0) {\r\n          message.success(`${this.isUpdate ? '更新' : '添加'}商品成功!`)\r\n          this.props.history.goBack()\r\n        } else {\r\n          message.error(`${this.isUpdate ? '更新' : '添加'}商品失败!`)\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  componentDidMount () {\r\n    this.getCategorys('0')\r\n  }\r\n\r\n  componentWillMount () {\r\n    // 取出携带的state\r\n    const product = memoryUtils.product  // 如果是添加没值, 否则有值\r\n    // 保存是否是更新的标识\r\n    this.isUpdate = !!product._id\r\n    // 保存商品(如果没有, 保存是{})\r\n    this.product = product || {}\r\n  }\r\n\r\n  /*\r\n  在卸载之前清除保存的数据\r\n  */\r\n  componentWillUnmount () {\r\n    memoryUtils.product = {}\r\n  }\r\n\r\n  render() {\r\n\r\n    const {isUpdate, product} = this\r\n    const {pCategoryId, categoryId, imgs, detail} = product\r\n    // 用来接收级联分类ID的数组\r\n    const categoryIds = []\r\n    if(isUpdate) {\r\n      // 商品是一个一级分类的商品\r\n      if(pCategoryId==='0') {\r\n        categoryIds.push(categoryId)\r\n      } else {\r\n        // 商品是一个二级分类的商品\r\n        categoryIds.push(pCategoryId)\r\n        categoryIds.push(categoryId)\r\n      }\r\n    }\r\n\r\n    // 指定Item布局的配置对象\r\n    const formItemLayout = {\r\n      labelCol: { span: 2 },  // 左侧label的宽度\r\n      wrapperCol: { span: 8 }, // 右侧包裹的宽度\r\n    }\r\n\r\n    // 头部左侧标题\r\n    const title = (\r\n      <span>\r\n        <LinkButton onClick={() => this.props.history.goBack()}>\r\n          <Icon type='arrow-left' style={{fontSize: 20}}/>\r\n        </LinkButton>\r\n        <span>{isUpdate ? '修改商品' : '添加商品'}</span>\r\n      </span>\r\n    )\r\n\r\n    const {getFieldDecorator} = this.props.form\r\n\r\n    return (\r\n      <Card title={title}>\r\n        <Form {...formItemLayout}>\r\n          <Item label=\"商品名称\">\r\n            {\r\n              getFieldDecorator('name', {\r\n                initialValue: product.name,\r\n                rules: [\r\n                  {required: true, message: '必须输入商品名称'}\r\n                ]\r\n              })(<Input placeholder='请输入商品名称'/>)\r\n            }\r\n          </Item>\r\n          <Item label=\"商品描述\">\r\n            {\r\n              getFieldDecorator('desc', {\r\n                initialValue: product.desc,\r\n                rules: [\r\n                  {required: true, message: '必须输入商品描述'}\r\n                ]\r\n              })(<TextArea placeholder=\"请输入商品描述\" autosize={{ minRows: 2, maxRows: 6 }} />)\r\n            }\r\n\r\n          </Item>\r\n          <Item label=\"商品价格\">\r\n\r\n            {\r\n              getFieldDecorator('price', {\r\n                initialValue: product.price,\r\n                rules: [\r\n                  {required: true, message: '必须输入商品价格'},\r\n                  {validator: this.validatePrice}\r\n                ]\r\n              })(<Input type='number' placeholder='请输入商品价格' addonAfter='元'/>)\r\n            }\r\n          </Item>\r\n          <Item label=\"商品分类\">\r\n            {\r\n              getFieldDecorator('categoryIds', {\r\n                initialValue: categoryIds,\r\n                rules: [\r\n                  {required: true, message: '必须指定商品分类'},\r\n                ]\r\n              })(\r\n                <Cascader\r\n                  placeholder='请指定商品分类'\r\n                  options={this.state.options}  /*需要显示的列表数据数组*/\r\n                  loadData={this.loadData} /*当选择某个列表项, 加载下一级列表的监听回调*/\r\n                />\r\n              )\r\n            }\r\n\r\n          </Item>\r\n          <Item label=\"商品图片\">\r\n            <PicturesWall ref={this.pw} imgs={imgs}/>\r\n          </Item>\r\n          <Item label=\"商品详情\" labelCol={{span: 2}} wrapperCol={{span: 20}}>\r\n            <RichTextEditor ref={this.editor} detail={detail}/>\r\n          </Item>\r\n          <Item>\r\n            <Button type='primary' onClick={this.submit}>提交</Button>\r\n          </Item>\r\n        </Form>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Form.create()(ProductAddUpdate)\r\n\r\n\r\n/*\r\n1. 子组件调用父组件的方法: 将父组件的方法以函数属性的形式传递给子组件, 子组件就可以调用\r\n2. 父组件调用子组件的方法: 在父组件中通过ref得到子组件标签对象(也就是组件对象), 调用其方法\r\n */\r\n\r\n/*\r\n使用ref\r\n1. 创建ref容器: thi.pw = React.createRef()\r\n2. 将ref容器交给需要获取的标签元素: <PictureWall ref={this.pw} />\r\n3. 通过ref容器读取标签元素: this.pw.current\r\n */","import React, {Component} from 'react'\r\nimport {\r\n  Card,\r\n  Icon,\r\n  List\r\n} from 'antd'\r\n\r\nimport LinkButton from '../../components/link-button'\r\nimport {BASE_IMG_URL} from '../../utils/constants'\r\nimport {reqCategory} from '../../api'\r\nimport memoryUtils from \"../../utils/memoryUtils\";\r\n\r\nconst Item = List.Item\r\n\r\n\r\n/*\r\nProduct的详情子路由组件\r\n */\r\nexport default class ProductDetail extends Component {\r\n\r\n  state = {\r\n    cName1: '', // 一级分类名称\r\n    cName2: '', // 二级分类名称\r\n  }\r\n\r\n  async componentDidMount () {\r\n\r\n    // 得到当前商品的分类ID\r\n    const {pCategoryId, categoryId} = memoryUtils.product\r\n    if(pCategoryId==='0') { // 一级分类下的商品\r\n      const result = await reqCategory(categoryId)\r\n      const cName1 = result.data.name\r\n      this.setState({cName1})\r\n    } else { // 二级分类下的商品\r\n      /*\r\n      //通过多个await方式发多个请求: 后面一个请求是在前一个请求成功返回之后才发送\r\n      const result1 = await reqCategory(pCategoryId) // 获取一级分类列表\r\n      const result2 = await reqCategory(categoryId) // 获取二级分类\r\n      const cName1 = result1.data.name\r\n      const cName2 = result2.data.name\r\n      */\r\n\r\n      // 一次性发送多个请求, 只有都成功了, 才正常处理\r\n      const results = await Promise.all([reqCategory(pCategoryId), reqCategory(categoryId)])\r\n      const cName1 = results[0].data.name\r\n      const cName2 = results[1].data.name\r\n      this.setState({\r\n        cName1,\r\n        cName2\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  /*\r\n 在卸载之前清除保存的数据\r\n */\r\n  componentWillUnmount () {\r\n    memoryUtils.product = {}\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    // 读取携带过来的state数据\r\n    const {name, desc, price, detail, imgs} = memoryUtils.product\r\n    const {cName1, cName2} = this.state\r\n\r\n    const title = (\r\n      <span>\r\n        <LinkButton>\r\n          <Icon\r\n            type='arrow-left'\r\n            style={{marginRight: 10, fontSize: 20}}\r\n            onClick={() => this.props.history.goBack()}\r\n          />\r\n        </LinkButton>\r\n\r\n        <span>商品详情</span>\r\n      </span>\r\n    )\r\n    return (\r\n      <Card title={title} className='product-detail'>\r\n        <List>\r\n          <Item>\r\n            <span className=\"left\">商品名称:</span>\r\n            <span>{name}</span>\r\n          </Item>\r\n          <Item>\r\n            <span className=\"left\">商品描述:</span>\r\n            <span>{desc}</span>\r\n          </Item>\r\n          <Item>\r\n            <span className=\"left\">商品价格:</span>\r\n            <span>{price}元</span>\r\n          </Item>\r\n          <Item>\r\n            <span className=\"left\">所属分类:</span>\r\n            <span>{cName1} {cName2 ? ' --> '+cName2 : ''}</span>\r\n          </Item>\r\n          <Item>\r\n            <span className=\"left\">商品图片:</span>\r\n            <span>\r\n              {\r\n                imgs.map(img => (\r\n                  <img\r\n                    key={img}\r\n                    src={BASE_IMG_URL + img}\r\n                    className=\"product-img\"\r\n                    alt=\"img\"\r\n                  />\r\n                ))\r\n              }\r\n            </span>\r\n          </Item>\r\n          <Item>\r\n            <span className=\"left\">商品详情:</span>\r\n            <span dangerouslySetInnerHTML={{__html: detail}}>\r\n            </span>\r\n          </Item>\r\n\r\n        </List>\r\n      </Card>\r\n    )\r\n  }\r\n}","import React, {Component} from 'react'\r\nimport {Switch, Route, Redirect} from 'react-router-dom'\r\n\r\nimport ProductHome from './home'\r\nimport ProductAddUpdate from './add-update'\r\nimport ProductDetail from './detail'\r\n\r\nimport './product.less'\r\n\r\n/*\r\n商品路由\r\n */\r\nexport default class Product extends Component {\r\n  render() {\r\n    return (\r\n      <Switch>\r\n        <Route path='/product' component={ProductHome} exact/> {/*路径完全匹配*/}\r\n        <Route path='/product/addupdate' component={ProductAddUpdate}/>\r\n        <Route path='/product/detail' component={ProductDetail}/>\r\n        <Redirect to='/product'/>\r\n      </Switch>\r\n    )\r\n  }\r\n}","import React, {Component} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n  Form,\r\n  Input\r\n} from 'antd'\r\n\r\nconst Item = Form.Item\r\n\r\n/*\r\n添加分类的form组件\r\n */\r\nclass AddForm extends Component {\r\n\r\n  static propTypes = {\r\n    setForm: PropTypes.func.isRequired, // 用来传递form对象的函数\r\n  }\r\n\r\n  componentWillMount () {\r\n    this.props.setForm(this.props.form)\r\n  }\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form\r\n    // 指定Item布局的配置对象\r\n    const formItemLayout = {\r\n      labelCol: { span: 4 },  // 左侧label的宽度\r\n      wrapperCol: { span: 15 }, // 右侧包裹的宽度\r\n    }\r\n\r\n    return (\r\n      <Form>\r\n        <Item label='角色名称' {...formItemLayout}>\r\n          {\r\n            getFieldDecorator('roleName', {\r\n              initialValue: '',\r\n              rules: [\r\n                {required: true, message: '角色名称必须输入'}\r\n              ]\r\n            })(\r\n              <Input placeholder='请输入角色名称'/>\r\n            )\r\n          }\r\n        </Item>\r\n      </Form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Form.create()(AddForm)","import React, {PureComponent} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n  Form,\r\n  Input,\r\n  Tree\r\n} from 'antd'\r\nimport menuList from '../../config/menuConfig'\r\n\r\nconst Item = Form.Item\r\n\r\nconst { TreeNode } = Tree;\r\n\r\n/*\r\n添加分类的form组件\r\n */\r\nexport default class AuthForm extends PureComponent {\r\n\r\n  static propTypes = {\r\n    role: PropTypes.object\r\n  }\r\n\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    // 根据传入角色的menus生成初始状态\r\n    const {menus} = this.props.role\r\n    this.state = {\r\n      checkedKeys: menus\r\n    }\r\n  }\r\n\r\n  /*\r\n  为父组件提交获取最新menus数据的方法\r\n   */\r\n  getMenus = () => this.state.checkedKeys\r\n\r\n\r\n  getTreeNodes = (menuList) => {\r\n    return menuList.reduce((pre, item) => {\r\n      pre.push(\r\n        <TreeNode title={item.title} key={item.key}>\r\n          {item.children ? this.getTreeNodes(item.children) : null}\r\n        </TreeNode>\r\n      )\r\n      return pre\r\n    }, [])\r\n  }\r\n\r\n  // 选中某个node时的回调\r\n  onCheck = checkedKeys => {\r\n    console.log('onCheck', checkedKeys);\r\n    this.setState({ checkedKeys });\r\n  };\r\n\r\n\r\n  componentWillMount () {\r\n    this.treeNodes = this.getTreeNodes(menuList)\r\n  }\r\n\r\n  // 根据新传入的role来更新checkedKeys状态\r\n  /*\r\n  当组件接收到新的属性时自动调用\r\n   */\r\n  componentWillReceiveProps (nextProps) {\r\n    console.log('componentWillReceiveProps()', nextProps)\r\n    const menus = nextProps.role.menus\r\n    this.setState({\r\n      checkedKeys: menus\r\n    })\r\n    // this.state.checkedKeys = menus\r\n  }\r\n\r\n  render() {\r\n    console.log('AuthForm render()')\r\n    const {role} = this.props\r\n    const {checkedKeys} = this.state\r\n    // 指定Item布局的配置对象\r\n    const formItemLayout = {\r\n      labelCol: { span: 4 },  // 左侧label的宽度\r\n      wrapperCol: { span: 15 }, // 右侧包裹的宽度\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Item label='角色名称' {...formItemLayout}>\r\n          <Input value={role.name} disabled/>\r\n        </Item>\r\n\r\n        <Tree\r\n          checkable\r\n          defaultExpandAll={true}\r\n          checkedKeys={checkedKeys}\r\n          onCheck={this.onCheck}\r\n        >\r\n          <TreeNode title=\"平台权限\" key=\"all\">\r\n            {this.treeNodes}\r\n          </TreeNode>\r\n        </Tree>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, {Component} from 'react'\r\nimport {\r\n  Card,\r\n  Button,\r\n  Table,\r\n  Modal,\r\n  message\r\n} from 'antd'\r\nimport {connect} from 'react-redux'\r\n\r\nimport {PAGE_SIZE} from \"../../utils/constants\"\r\nimport {reqRoles, reqAddRole, reqUpdateRole} from '../../api'\r\nimport AddForm from './add-form'\r\nimport AuthForm from './auth-form'\r\nimport {formateDate} from '../../utils/dateUtils'\r\nimport {logout} from '../../redux/actions'\r\n\r\n/*\r\n角色路由\r\n */\r\nclass Role extends Component {\r\n\r\n  state = {\r\n    roles: [], // 所有角色的列表\r\n    role: {}, // 选中的role\r\n    isShowAdd: false, // 是否显示添加界面\r\n    isShowAuth: false, // 是否显示设置权限界面\r\n  }\r\n\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    this.auth = React.createRef()\r\n  }\r\n\r\n  initColumn = () => {\r\n    this.columns = [\r\n      {\r\n        title: '角色名称',\r\n        dataIndex: 'name'\r\n      },\r\n      {\r\n        title: '创建时间',\r\n        dataIndex: 'create_time',\r\n        render: (create_time) => formateDate(create_time)\r\n      },\r\n      {\r\n        title: '授权时间',\r\n        dataIndex: 'auth_time',\r\n        render: formateDate\r\n      },\r\n      {\r\n        title: '授权人',\r\n        dataIndex: 'auth_name'\r\n      },\r\n    ]\r\n  }\r\n\r\n  getRoles = async () => {\r\n    const result = await reqRoles()\r\n    if (result.status===0) {\r\n      const roles = result.data\r\n      this.setState({\r\n        roles\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  onRow = (role) => {\r\n    return {\r\n      onClick: event => { // 点击行\r\n        console.log('row onClick()', role)\r\n        // alert('点击行')\r\n        this.setState({\r\n          role\r\n        })\r\n      },\r\n    }\r\n  }\r\n\r\n  /*\r\n  添加角色\r\n   */\r\n  addRole = () => {\r\n    // 进行表单验证, 只能通过了才向下处理\r\n    this.form.validateFields(async (error, values) => {\r\n      if (!error) {\r\n\r\n        // 隐藏确认框\r\n        this.setState({\r\n          isShowAdd: false\r\n        })\r\n\r\n        // 收集输入数据\r\n        const {roleName} = values\r\n        this.form.resetFields()\r\n\r\n        // 请求添加\r\n        const result = await reqAddRole(roleName)\r\n        // 根据结果提示/更新列表显示\r\n        if (result.status===0) {\r\n          message.success('添加角色成功')\r\n          // this.getRoles()\r\n          // 新产生的角色\r\n          const role = result.data\r\n          // 更新roles状态\r\n          /*const roles = this.state.roles\r\n          roles.push(role)\r\n          this.setState({\r\n            roles\r\n          })*/\r\n\r\n          // 更新roles状态: 基于原本状态数据更新\r\n          this.setState(state => ({\r\n            roles: [...state.roles, role]\r\n          }))\r\n\r\n        } else {\r\n          message.success('添加角色失败')\r\n        }\r\n\r\n      }\r\n    })\r\n\r\n\r\n  }\r\n\r\n  /*\r\n  更新角色\r\n   */\r\n  updateRole = async () => {\r\n\r\n    // 隐藏确认框\r\n    this.setState({\r\n      isShowAuth: false\r\n    })\r\n\r\n    const role = this.state.role\r\n    // 得到最新的menus\r\n    const menus = this.auth.current.getMenus()\r\n    role.menus = menus\r\n    role.auth_time = Date.now()\r\n    role.auth_name = this.props.user.username\r\n\r\n    // 请求更新\r\n    const result = await reqUpdateRole(role)\r\n    if (result.status===0) {\r\n      // this.getRoles()\r\n      // 如果当前更新的是自己角色的权限, 强制退出\r\n      if (role._id === this.props.user.role_id) {\r\n        this.props.logout()\r\n        message.success('当前用户角色权限成功')\r\n      } else {\r\n        message.success('设置角色权限成功')\r\n        this.setState({\r\n          roles: [...this.state.roles]\r\n        })\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n  componentWillMount () {\r\n    this.initColumn()\r\n  }\r\n\r\n  componentDidMount () {\r\n    this.getRoles()\r\n  }\r\n\r\n  render() {\r\n\r\n    const {roles, role, isShowAdd, isShowAuth} = this.state\r\n\r\n    const title = (\r\n      <span>\r\n        <Button type='primary' onClick={() => this.setState({isShowAdd: true})}>创建角色</Button> &nbsp;&nbsp;\r\n        <Button type='primary' disabled={!role._id} onClick={() => this.setState({isShowAuth: true})}>设置角色权限</Button>\r\n      </span>\r\n    )\r\n\r\n    return (\r\n      <Card title={title}>\r\n        <Table\r\n          bordered\r\n          rowKey='_id'\r\n          dataSource={roles}\r\n          columns={this.columns}\r\n          pagination={{defaultPageSize: PAGE_SIZE}}\r\n          rowSelection={{\r\n            type: 'radio',\r\n            selectedRowKeys: [role._id],\r\n            onSelect: (role) => { // 选择某个radio时回调\r\n              this.setState({\r\n                role\r\n              })\r\n            }\r\n\r\n          }}\r\n          onRow={this.onRow}\r\n        />\r\n\r\n        <Modal\r\n          title=\"添加角色\"\r\n          visible={isShowAdd}\r\n          onOk={this.addRole}\r\n          onCancel={() => {\r\n            this.setState({isShowAdd: false})\r\n            this.form.resetFields()\r\n          }}\r\n        >\r\n          <AddForm\r\n            setForm={(form) => this.form = form}\r\n          />\r\n        </Modal>\r\n\r\n        <Modal\r\n          title=\"设置角色权限\"\r\n          visible={isShowAuth}\r\n          onOk={this.updateRole}\r\n          onCancel={() => {\r\n            this.setState({isShowAuth: false})\r\n          }}\r\n        >\r\n          <AuthForm ref={this.auth} role={role}/>\r\n        </Modal>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({user: state.user}),\r\n  {logout}\r\n)(Role)","import React, {PureComponent} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n  Form,\r\n  Select,\r\n  Input\r\n} from 'antd'\r\n\r\nconst Item = Form.Item\r\nconst Option = Select.Option\r\n\r\n/*\r\n添加/修改用户的form组件\r\n */\r\nclass UserForm extends PureComponent {\r\n\r\n  static propTypes = {\r\n    setForm: PropTypes.func.isRequired, // 用来传递form对象的函数\r\n    roles: PropTypes.array.isRequired,\r\n    user: PropTypes.object\r\n  }\r\n\r\n  componentWillMount () {\r\n    this.props.setForm(this.props.form)\r\n  }\r\n\r\n  render() {\r\n\r\n    const {roles, user} = this.props\r\n    const { getFieldDecorator } = this.props.form\r\n    // 指定Item布局的配置对象\r\n    const formItemLayout = {\r\n      labelCol: { span: 4 },  // 左侧label的宽度\r\n      wrapperCol: { span: 15 }, // 右侧包裹的宽度\r\n    }\r\n\r\n    return (\r\n      <Form {...formItemLayout}>\r\n        <Item label='用户名'>\r\n          {\r\n            getFieldDecorator('username', {\r\n              initialValue: user.username,\r\n            })(\r\n              <Input placeholder='请输入用户名'/>\r\n            )\r\n          }\r\n        </Item>\r\n\r\n        {\r\n          user._id ? null : (\r\n            <Item label='密码'>\r\n              {\r\n                getFieldDecorator('password', {\r\n                  initialValue: user.password,\r\n                })(\r\n                  <Input type='password' placeholder='请输入密码'/>\r\n                )\r\n              }\r\n            </Item>\r\n          )\r\n        }\r\n\r\n        <Item label='手机号'>\r\n          {\r\n            getFieldDecorator('phone', {\r\n              initialValue: user.phone,\r\n            })(\r\n              <Input placeholder='请输入手机号'/>\r\n            )\r\n          }\r\n        </Item>\r\n        <Item label='邮箱'>\r\n          {\r\n            getFieldDecorator('email', {\r\n              initialValue: user.email,\r\n            })(\r\n              <Input placeholder='请输入邮箱'/>\r\n            )\r\n          }\r\n        </Item>\r\n\r\n        <Item label='角色'>\r\n          {\r\n            getFieldDecorator('role_id', {\r\n              initialValue: user.role_id,\r\n            })(\r\n              <Select>\r\n                {\r\n                  roles.map(role => <Option key={role._id} value={role._id}>{role.name}</Option>)\r\n                }\r\n              </Select>\r\n            )\r\n          }\r\n        </Item>\r\n      </Form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Form.create()(UserForm)","import React, {Component} from 'react'\r\nimport {\r\n  Card,\r\n  Button,\r\n  Table,\r\n  Modal,\r\n  message\r\n} from 'antd'\r\nimport {formateDate} from \"../../utils/dateUtils\"\r\nimport LinkButton from \"../../components/link-button/index\"\r\nimport {reqDeleteUser, reqUsers, reqAddOrUpdateUser} from \"../../api/index\";\r\nimport UserForm from './user-form'\r\n\r\n/*\r\n用户路由\r\n */\r\nexport default class User extends Component {\r\n\r\n  state = {\r\n    users: [], // 所有用户列表\r\n    roles: [], // 所有角色列表\r\n    isShow: false, // 是否显示确认框\r\n  }\r\n\r\n  initColumns = () => {\r\n    this.columns = [\r\n      {\r\n        title: '用户名',\r\n        dataIndex: 'username'\r\n      },\r\n      {\r\n        title: '邮箱',\r\n        dataIndex: 'email'\r\n      },\r\n\r\n      {\r\n        title: '电话',\r\n        dataIndex: 'phone'\r\n      },\r\n      {\r\n        title: '注册时间',\r\n        dataIndex: 'create_time',\r\n        render: formateDate\r\n      },\r\n      {\r\n        title: '所属角色',\r\n        dataIndex: 'role_id',\r\n        render: (role_id) => this.roleNames[role_id]\r\n      },\r\n      {\r\n        title: '操作',\r\n        render: (user) => (\r\n          <span>\r\n            <LinkButton onClick={() => this.showUpdate(user)}>修改</LinkButton>\r\n            <LinkButton onClick={() => this.deleteUser(user)}>删除</LinkButton>\r\n          </span>\r\n        )\r\n      },\r\n    ]\r\n  }\r\n\r\n  /*\r\n  根据role的数组, 生成包含所有角色名的对象(属性名用角色id值)\r\n   */\r\n  initRoleNames = (roles) => {\r\n    const roleNames = roles.reduce((pre, role) => {\r\n      pre[role._id] = role.name\r\n      return pre\r\n    }, {})\r\n    // 保存\r\n    this.roleNames = roleNames\r\n  }\r\n\r\n  /*\r\n  显示添加界面\r\n   */\r\n  showAdd = () => {\r\n    this.user = null // 去除前面保存的user\r\n    this.setState({isShow: true})\r\n  }\r\n\r\n  /*\r\n  显示修改界面\r\n   */\r\n  showUpdate = (user) => {\r\n    this.user = user // 保存user\r\n    this.setState({\r\n      isShow: true\r\n    })\r\n  }\r\n\r\n  /*\r\n  删除指定用户\r\n   */\r\n  deleteUser = (user) => {\r\n    Modal.confirm({\r\n      title: `确认删除${user.username}吗?`,\r\n      onOk: async () => {\r\n        const result = await reqDeleteUser(user._id)\r\n        if(result.status===0) {\r\n          message.success('删除用户成功!')\r\n          this.getUsers()\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  /*\r\n  添加/更新用户\r\n   */\r\n  addOrUpdateUser = async () => {\r\n\r\n    this.setState({isShow: false})\r\n\r\n    // 1. 收集输入数据\r\n    const user = this.form.getFieldsValue()\r\n    this.form.resetFields()\r\n    // 如果是更新, 需要给user指定_id属性\r\n    if (this.user) {\r\n      user._id = this.user._id\r\n    }\r\n\r\n    // 2. 提交添加的请求\r\n    const result = await reqAddOrUpdateUser(user)\r\n    // 3. 更新列表显示\r\n    if(result.status===0) {\r\n      message.success(`${this.user ? '修改' : '添加'}用户成功`)\r\n      this.getUsers()\r\n    }\r\n  }\r\n\r\n  getUsers = async () => {\r\n    const result = await reqUsers()\r\n    if (result.status===0) {\r\n      const {users, roles} = result.data\r\n      this.initRoleNames(roles)\r\n      this.setState({\r\n        users,\r\n        roles\r\n      })\r\n    }\r\n  }\r\n\r\n  componentWillMount () {\r\n    this.initColumns()\r\n  }\r\n\r\n  componentDidMount () {\r\n    this.getUsers()\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    const {users, roles, isShow} = this.state\r\n    const user = this.user || {}\r\n\r\n    const title = <Button type='primary' onClick={this.showAdd}>创建用户</Button>\r\n\r\n    return (\r\n      <Card title={title}>\r\n        <Table\r\n          bordered\r\n          rowKey='_id'\r\n          dataSource={users}\r\n          columns={this.columns}\r\n          pagination={{defaultPageSize: 2}}\r\n        />\r\n\r\n        <Modal\r\n          title={user._id ? '修改用户' : '添加用户'}\r\n          visible={isShow}\r\n          onOk={this.addOrUpdateUser}\r\n          onCancel={() => {\r\n            this.form.resetFields()\r\n            this.setState({isShow: false})\r\n          }}\r\n        >\r\n          <UserForm\r\n            setForm={form => this.form = form}\r\n            roles={roles}\r\n            user={user}\r\n          />\r\n        </Modal>\r\n\r\n      </Card>\r\n    )\r\n  }\r\n}","import React, {Component} from 'react'\r\nimport {Card, Button} from 'antd'\r\nimport ReactEcharts from 'echarts-for-react'\r\n\r\n/*\r\n后台管理的柱状图路由组件\r\n */\r\nexport default class Bar extends Component {\r\n\r\n  state = {\r\n    sales: [5, 20, 36, 10, 10, 20], // 销量的数组\r\n    stores: [6, 10, 25, 20, 15, 10], // 库存的数组\r\n  }\r\n\r\n  update = () => {\r\n    this.setState(state => ({\r\n      sales: state.sales.map(sale => sale + 1),\r\n      stores: state.stores.reduce((pre, store) => {\r\n        pre.push(store-1)\r\n        return pre\r\n      }, []),\r\n    }))\r\n  }\r\n\r\n  /*\r\n  返回柱状图的配置对象\r\n   */\r\n  getOption = (sales, stores) => {\r\n    return {\r\n      title: {\r\n        text: 'ECharts 入门示例'\r\n      },\r\n      tooltip: {},\r\n      legend: {\r\n        data:['销量', '库存']\r\n      },\r\n      xAxis: {\r\n        data: [\"衬衫\",\"羊毛衫\",\"雪纺衫\",\"裤子\",\"高跟鞋\",\"袜子\"]\r\n      },\r\n      yAxis: {},\r\n      series: [{\r\n        name: '销量',\r\n        type: 'bar',\r\n        data: sales\r\n      }, {\r\n        name: '库存',\r\n        type: 'bar',\r\n        data: stores\r\n      }]\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {sales, stores} = this.state\r\n    return (\r\n      <div>\r\n        <Card>\r\n          <Button type='primary' onClick={this.update}>更新</Button>\r\n        </Card>\r\n\r\n        <Card title='柱状图一'>\r\n          <ReactEcharts option={this.getOption(sales, stores)} />\r\n        </Card>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}","import React, {Component} from 'react'\r\nimport {Card, Button} from 'antd'\r\nimport ReactEcharts from 'echarts-for-react'\r\n\r\n/*\r\n后台管理的折线图路由组件\r\n */\r\nexport default class Line extends Component {\r\n\r\n  state = {\r\n    sales: [5, 20, 36, 10, 10, 20], // 销量的数组\r\n    stores: [6, 10, 25, 20, 15, 10], // 库存的数组\r\n  }\r\n\r\n  update = () => {\r\n    this.setState(state => ({\r\n      sales: state.sales.map(sale => sale + 1),\r\n      stores: state.stores.reduce((pre, store) => {\r\n        pre.push(store-1)\r\n        return pre\r\n      }, []),\r\n    }))\r\n  }\r\n\r\n  /*\r\n  返回柱状图的配置对象\r\n   */\r\n  getOption = (sales, stores) => {\r\n    return {\r\n      title: {\r\n        text: 'ECharts 入门示例'\r\n      },\r\n      tooltip: {},\r\n      legend: {\r\n        data:['销量', '库存']\r\n      },\r\n      xAxis: {\r\n        data: [\"衬衫\",\"羊毛衫\",\"雪纺衫\",\"裤子\",\"高跟鞋\",\"袜子\"]\r\n      },\r\n      yAxis: {},\r\n      series: [{\r\n        name: '销量',\r\n        type: 'line',\r\n        data: sales\r\n      }, {\r\n        name: '库存',\r\n        type: 'line',\r\n        data: stores\r\n      }]\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {sales, stores} = this.state\r\n    return (\r\n      <div>\r\n        <Card>\r\n          <Button type='primary' onClick={this.update}>更新</Button>\r\n        </Card>\r\n\r\n        <Card title='折线图一'>\r\n          <ReactEcharts option={this.getOption(sales, stores)} />\r\n        </Card>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}","import React, {Component} from 'react'\r\nimport {Card} from 'antd'\r\nimport ReactEcharts from 'echarts-for-react'\r\n\r\n/*\r\n后台管理的饼图路由组件\r\n */\r\nexport default class Pie extends Component {\r\n\r\n  getOption = () => {\r\n    return {\r\n      title : {\r\n        text: '某站点用户访问来源',\r\n        subtext: '纯属虚构',\r\n        x:'center'\r\n      },\r\n      tooltip : {\r\n        trigger: 'item',\r\n        formatter: \"{a} <br/>{b} : {c} ({d}%)\"\r\n      },\r\n      legend: {\r\n        orient: 'vertical',\r\n        left: 'left',\r\n        data: ['直接访问','邮件营销','联盟广告','视频广告','搜索引擎']\r\n      },\r\n      series : [\r\n        {\r\n          name: '访问来源',\r\n          type: 'pie',\r\n          radius : '55%',\r\n          center: ['50%', '60%'],\r\n          data:[\r\n            {value:335, name:'直接访问'},\r\n            {value:310, name:'邮件营销'},\r\n            {value:234, name:'联盟广告'},\r\n            {value:135, name:'视频广告'},\r\n            {value:1548, name:'搜索引擎'}\r\n          ],\r\n          itemStyle: {\r\n            emphasis: {\r\n              shadowBlur: 10,\r\n              shadowOffsetX: 0,\r\n              shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    };\r\n\r\n  }\r\n\r\n  getOption2 = () => {\r\n    return {\r\n      backgroundColor: '#2c343c',\r\n\r\n      title: {\r\n        text: 'Customized Pie',\r\n        left: 'center',\r\n        top: 20,\r\n        textStyle: {\r\n          color: '#ccc'\r\n        }\r\n      },\r\n\r\n      tooltip : {\r\n        trigger: 'item',\r\n        formatter: \"{a} <br/>{b} : {c} ({d}%)\"\r\n      },\r\n\r\n      visualMap: {\r\n        show: false,\r\n        min: 80,\r\n        max: 600,\r\n        inRange: {\r\n          colorLightness: [0, 1]\r\n        }\r\n      },\r\n      series : [\r\n        {\r\n          name:'访问来源',\r\n          type:'pie',\r\n          radius : '55%',\r\n          center: ['50%', '50%'],\r\n          data:[\r\n            {value:335, name:'直接访问'},\r\n            {value:310, name:'邮件营销'},\r\n            {value:274, name:'联盟广告'},\r\n            {value:235, name:'视频广告'},\r\n            {value:400, name:'搜索引擎'}\r\n          ].sort(function (a, b) { return a.value - b.value; }),\r\n          roseType: 'radius',\r\n          label: {\r\n            normal: {\r\n              textStyle: {\r\n                color: 'rgba(255, 255, 255, 0.3)'\r\n              }\r\n            }\r\n          },\r\n          labelLine: {\r\n            normal: {\r\n              lineStyle: {\r\n                color: 'rgba(255, 255, 255, 0.3)'\r\n              },\r\n              smooth: 0.2,\r\n              length: 10,\r\n              length2: 20\r\n            }\r\n          },\r\n          itemStyle: {\r\n            normal: {\r\n              color: '#c23531',\r\n              shadowBlur: 200,\r\n              shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n            }\r\n          },\r\n\r\n          animationType: 'scale',\r\n          animationEasing: 'elasticOut',\r\n          animationDelay: function (idx) {\r\n            return Math.random() * 200;\r\n          }\r\n        }\r\n      ]\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Card title='饼图一'>\r\n          <ReactEcharts option={this.getOption()} style={{height: 300}}/>\r\n        </Card>\r\n        <Card title='饼图二'>\r\n          <ReactEcharts option={this.getOption2()} style={{height: 300}}/>\r\n        </Card>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, {Component} from 'react'\r\nimport {Button, Row, Col} from 'antd'\r\nimport {connect} from 'react-redux'\r\n\r\nimport {setHeadTitle} from '../../redux/actions'\r\nimport './not-found.less'\r\n\r\n/*\r\n前台404页面\r\n */\r\nclass NotFound extends Component {\r\n\r\n  goHome = () => {\r\n    this.props.setHeadTitle('首页')\r\n    this.props.history.replace('/home')\r\n  }\r\n\r\n  render() {\r\n    return (\r\n\r\n      <Row className='not-found'>\r\n        <Col span={12} className='left'></Col>\r\n        <Col span={12} className='right'>\r\n          <h1>404</h1>\r\n          <h2>抱歉，你访问的页面不存在</h2>\r\n          <div>\r\n            <Button type='primary' onClick={this.goHome}>\r\n              回到首页\r\n            </Button>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  {setHeadTitle}\r\n)(NotFound)","import React, {Component} from 'react'\r\nimport {Redirect, Route, Switch} from 'react-router-dom'\r\nimport { Layout } from 'antd'\r\nimport {connect} from 'react-redux'\r\n\r\nimport LeftNav from '../../components/left-nav'\r\nimport Header from '../../components/header'\r\nimport Home from '../home/home'\r\nimport Category from '../category/category'\r\nimport Product from '../product/product'\r\nimport Role from '../role/role'\r\nimport User from '../user/user'\r\nimport Bar from '../charts/bar'\r\nimport Line from '../charts/line'\r\nimport Pie from '../charts/pie'\r\nimport NotFound from '../not-found/not-found'\r\n\r\n\r\nconst { Footer, Sider, Content } = Layout\r\n\r\n/*\r\n后台管理的路由组件\r\n */\r\nclass Admin extends Component {\r\n  render () {\r\n    const user = this.props.user\r\n    // 如果内存没有存储user ==> 当前没有登陆\r\n    if(!user || !user._id) {\r\n      // 自动跳转到登陆(在render()中)\r\n      return <Redirect to='/login'/>\r\n    }\r\n    return (\r\n      <Layout style={{minHeight: '100%'}}>\r\n        <Sider>\r\n          <LeftNav/>\r\n        </Sider>\r\n        <Layout>\r\n          <Header>Header</Header>\r\n          <Content style={{margin: 20, backgroundColor: '#fff'}}>\r\n            <Switch>\r\n              <Redirect exact from='/' to='/home'/>\r\n              <Route path='/home' component={Home}/>\r\n              <Route path='/category' component={Category}/>\r\n              <Route path='/product' component={Product}/>\r\n              <Route path='/role' component={Role}/>\r\n              <Route path='/user' component={User}/>\r\n              <Route path='/charts/bar' component={Bar}/>\r\n              <Route path='/charts/line' component={Line}/>\r\n              <Route path='/charts/pie' component={Pie}/>\r\n              <Route component={NotFound}/> {/*上面没有一个匹配, 直接显示*/}\r\n            </Switch>\r\n          </Content>\r\n          <Footer style={{textAlign: 'center', color: '#cccccc'}}>推荐使用谷歌浏览器，可以获得更佳页面操作体验</Footer>\r\n        </Layout>\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default connect(\r\n  state => ({user: state.user}),\r\n  {}\r\n)(Admin)","import React, {Component} from 'react'\r\nimport {BrowserRouter, Route, Switch} from 'react-router-dom'\r\n\r\nimport Login from './pages/login/login'\r\nimport Admin from './pages/admin/admin'\r\n\r\n/*\r\n应用的根组件\r\n */\r\nexport default class App extends Component {\r\n\r\n\r\n  render () {\r\n    return (\r\n      <BrowserRouter>\r\n        <Switch> {/*只匹配其中一个*/}\r\n          <Route path='/login' component={Login}></Route>\r\n          <Route path='/' component={Admin}></Route>\r\n        </Switch>\r\n      </BrowserRouter>\r\n    )\r\n  }\r\n}","/*\r\n入口js\r\n */\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport {Provider} from 'react-redux'\r\n\r\nimport store from './redux/store'\r\nimport App from './App'\r\n\r\n// 将App组件标签渲染到index页面的div上\r\nReactDOM.render((\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>\r\n), document.getElementById('root'))","module.exports = __webpack_public_path__ + \"static/media/logo.ba1f87ec.png\";"],"sourceRoot":""}